[
  {
    "createdAt": "2025-04-22T01:16:55.145Z",
    "updatedAt": "2025-05-06T23:11:54.000Z",
    "id": "E4rLZJ7IT0iCWP1E",
    "name": "Calendly Appointment SQS",
    "active": true,
    "nodes": [
      {
        "parameters": {
          "values": {
            "string": [
              {
                "name": "apiBaseUrl",
                "value": "https://altiverr-webhook-relay-fe6ebtfzo-matthews-projects-af8cd70e.vercel.app/api"
              },
              {
                "name": "queueApiKey",
                "value": "8bf1c1233ad3-queue-api-key-1a2b3c4d5e"
              }
            ]
          },
          "options": {}
        },
        "name": "Set Variables",
        "type": "n8n-nodes-base.set",
        "typeVersion": 1,
        "position": [
          -860,
          -140
        ],
        "id": "3da9a3ea-168d-4a78-a9f2-3706fd4eaf5f"
      },
      {
        "parameters": {
          "authentication": "headerAuth",
          "url": "=https://altiverr-webhook-relay-3756h73re-matthews-projects-af8cd70e.vercel.app/api/queue",
          "options": {}
        },
        "name": "Poll Queue",
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 1,
        "position": [
          -720,
          -140
        ],
        "id": "074f9d61-8bfc-4c5b-8998-0c4f12b0de74",
        "credentials": {
          "httpHeaderAuth": {
            "id": "qiv6M289zPF0qoMV",
            "name": "Header Auth account"
          }
        }
      },
      {
        "parameters": {
          "conditions": {
            "number": [
              {
                "value1": "={{ $json[\"messages\"].length }}",
                "operation": "larger"
              }
            ]
          }
        },
        "name": "Message Found?",
        "type": "n8n-nodes-base.if",
        "typeVersion": 1,
        "position": [
          -580,
          -140
        ],
        "id": "3b83d0a2-a004-496b-a79e-f53ef9e1ea42"
      },
      {
        "parameters": {
          "rule": {
            "interval": [
              {
                "field": "minutes",
                "minutesInterval": 45
              }
            ]
          }
        },
        "name": "Schedule Trigger",
        "type": "n8n-nodes-base.scheduleTrigger",
        "typeVersion": 1,
        "position": [
          -1000,
          -140
        ],
        "id": "9a6e8170-aa75-4c80-a4c1-f8be432a11d7"
      },
      {
        "parameters": {
          "operation": "create",
          "base": {
            "__rl": true,
            "value": "app6SUQ9NUFSGtmi0",
            "mode": "list",
            "cachedResultName": "Altiverr Leads",
            "cachedResultUrl": "https://airtable.com/app6SUQ9NUFSGtmi0"
          },
          "table": {
            "__rl": true,
            "value": "tbl8ZXe5BVSv91sGu",
            "mode": "list",
            "cachedResultName": "Leads",
            "cachedResultUrl": "https://airtable.com/app6SUQ9NUFSGtmi0/tbl8ZXe5BVSv91sGu"
          },
          "columns": {
            "mappingMode": "defineBelow",
            "value": {
              "Lead Name": "={{ $json.name }}",
              "Company": "={{ $json[\"Company Name\"] }}",
              "Industry": "={{ $json.Industry }}",
              "MRR": "={{ $json.MRR }}",
              "Tech Stack": "={{ $json[\"Tech Stack\"] }}",
              "Team Size": "={{ $json[\"Team Size\"] }}",
              "Decision Maker": "={{ $json[\"Decision Maker\"] }}",
              "Agree to Show": "={{ $json[\"Agree to show \"] }}",
              "Created At": "={{ $json.Created }}",
              "Reschedule URL": "={{ $json[\"Reschedule URL\"] }}",
              "Location": "={{ $json.Location }}",
              "Start Time": "={{ $json[\"Start Time\"] }}",
              "Select": "New",
              "Source": "Calendar booking",
              "Email": "={{ $json.body.payload.email }}"
            },
            "matchingColumns": [],
            "schema": [
              {
                "id": "Lead Name",
                "displayName": "Lead Name",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Company",
                "displayName": "Company",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Industry",
                "displayName": "Industry",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "MRR",
                "displayName": "MRR",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Tech Stack",
                "displayName": "Tech Stack",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Team Size",
                "displayName": "Team Size",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Decision Maker",
                "displayName": "Decision Maker",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Agree to Show",
                "displayName": "Agree to Show",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Created At",
                "displayName": "Created At",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Reschedule URL",
                "displayName": "Reschedule URL",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Location",
                "displayName": "Location",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Start Time",
                "displayName": "Start Time",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Source",
                "displayName": "Source",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "First Name",
                "displayName": "First Name",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Last Name",
                "displayName": "Last Name",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Email",
                "displayName": "Email",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "domain",
                "displayName": "domain",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "linkedin",
                "displayName": "linkedin",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Job Title",
                "displayName": "Job Title",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Select",
                "displayName": "Select",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "options",
                "options": [
                  {
                    "name": "New",
                    "value": "New"
                  },
                  {
                    "name": "Contacted",
                    "value": "Contacted"
                  }
                ],
                "readOnly": false,
                "removed": false
              },
              {
                "id": "City",
                "displayName": "City",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "State",
                "displayName": "State",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              }
            ],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          },
          "options": {}
        },
        "type": "n8n-nodes-base.airtable",
        "typeVersion": 2.1,
        "position": [
          -140,
          -260
        ],
        "id": "a2677c66-8690-4554-9cb5-025cbde9a201",
        "name": "Airtable",
        "alwaysOutputData": false,
        "credentials": {
          "airtableTokenApi": {
            "id": "j7w1vKTB0TLogKo3",
            "name": "Airtable Personal Access Token"
          }
        }
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "cee4d1de-8b3a-4ef1-a9ff-11a306e99cc2",
                "name": "=name",
                "value": "={{ $json[\"body\"][\"payload\"][\"name\"] }}",
                "type": "string"
              },
              {
                "id": "60b45c2e-3817-45bc-9bda-3ed044cb7671",
                "name": "Company Name",
                "value": "={{ $json.body.payload.questions_and_answers[0].answer }}",
                "type": "string"
              },
              {
                "id": "75549b61-954e-43ad-afdb-4ba679150d07",
                "name": "Industry",
                "value": "={{ $json.body.payload.questions_and_answers[1].answer }}",
                "type": "string"
              },
              {
                "id": "974b33c7-bfd4-4382-8c9b-19689c6762cf",
                "name": "MRR",
                "value": "={{ $json.body.payload.questions_and_answers[2].answer }}",
                "type": "string"
              },
              {
                "id": "3063e020-e095-4992-8e2b-c7df6bfbf141",
                "name": "Tech Stack",
                "value": "={{ $json.body.payload.questions_and_answers[3].answer }}",
                "type": "string"
              },
              {
                "id": "a911bc64-eb90-4403-92fb-d9942f695933",
                "name": "Team Size",
                "value": "={{ $json.body.payload.questions_and_answers[4].answer }}",
                "type": "string"
              },
              {
                "id": "6f33bf9f-f1d2-4b17-9e65-aac8437fc6df",
                "name": "Decision Maker",
                "value": "={{ $json.body.payload.questions_and_answers[6].answer }}",
                "type": "string"
              },
              {
                "id": "b0b9adbc-a59b-4638-932c-1a3567f1aeeb",
                "name": "Agree to show ",
                "value": "={{ $json.body.payload.questions_and_answers[7].answer }}",
                "type": "string"
              },
              {
                "id": "d790233d-8587-4b93-9e43-e89a1a1e3650",
                "name": "Created",
                "value": "={{ $json.body.payload.scheduled_event.created_at }}",
                "type": "string"
              },
              {
                "id": "b25f229f-66f7-4ba4-8006-1d3af5a2ad4e",
                "name": "Reschedule URL",
                "value": "={{ $json.body.payload.reschedule_url }}",
                "type": "string"
              },
              {
                "id": "72b78607-bee6-4e1d-8b0e-90e608379ee7",
                "name": "Location",
                "value": "={{ $json.body.payload.scheduled_event.location.join_url }}",
                "type": "string"
              },
              {
                "id": "14c232be-2cea-439f-8d78-252e4c7e50a9",
                "name": "Start Time",
                "value": "={{ $json.body.payload.scheduled_event.start_time }}",
                "type": "string"
              },
              {
                "id": "dd9f523a-172a-45a6-ad71-2a75017f5003",
                "name": "body.payload.email",
                "value": "={{ $json.body.payload.email }}",
                "type": "string"
              }
            ]
          },
          "options": {}
        },
        "type": "n8n-nodes-base.set",
        "typeVersion": 3.4,
        "position": [
          -280,
          -200
        ],
        "id": "3732d81d-d86a-4fb5-b93a-9fc6e6764b47",
        "name": "Edit Fields"
      },
      {
        "parameters": {
          "fieldToSplitOut": "messages",
          "options": {}
        },
        "type": "n8n-nodes-base.splitOut",
        "typeVersion": 1,
        "position": [
          -420,
          -200
        ],
        "id": "58d565e5-28f5-4e3d-bb65-c4795b933fb0",
        "name": "Split Out"
      },
      {
        "parameters": {
          "method": "POST",
          "url": "https://altiverr-webhook-relay.vercel.app/api/delete-message",
          "sendHeaders": true,
          "headerParameters": {
            "parameters": [
              {
                "name": "x-api-key",
                "value": "8bf1c1233ad3-queue-api-key-1a2b3c4d5e"
              }
            ]
          },
          "sendBody": true,
          "specifyBody": "json",
          "jsonBody": "={\n  \"receiptHandle\": \"{{ $('Split Out').item.json.receiptHandle }}\"\n} ",
          "options": {}
        },
        "type": "n8n-nodes-base.httpRequest",
        "typeVersion": 4.2,
        "position": [
          -140,
          -400
        ],
        "id": "b84daaac-1c64-449a-89a9-18a1c7cf2438",
        "name": "HTTP Request"
      },
      {
        "parameters": {
          "select": "channel",
          "channelId": {
            "__rl": true,
            "value": "C08Q6C6J4BZ",
            "mode": "list",
            "cachedResultName": "inbound-site-leads"
          },
          "text": "=New inbound site lead:\nName: {{ $json.name }}\nEmail: {{ $json.body.payload.email }}\nCompany: {{ $json[\"Company Name\"] }}\nIndustry: {{ $json.Industry }}\nMRR: {{ $json.MRR }}\nTech Stack: {{ $json[\"Tech Stack\"] }}\nTeam Size: {{ $json[\"Team Size\"] }}\nDecision Maker: {{ $json[\"Decision Maker\"] }}\nDate: Date: Date: {{ $json[\"Start Time\"] ? (new Date($json[\"Start Time\"]).toLocaleString('en-US', { timeZone: 'America/Denver', year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', hour12: true }).replace(',', '')) : \"No date available\" }}\nLocation: {{ $json.Location }}\nReschedule: {{ $json[\"Reschedule URL\"] }}\nDrop transcript below this line...",
          "otherOptions": {}
        },
        "type": "n8n-nodes-base.slack",
        "typeVersion": 2.3,
        "position": [
          -140,
          -140
        ],
        "id": "399472f2-a886-4752-8b40-8219520368f5",
        "name": "Slack",
        "webhookId": "95cc6f9b-2ff2-4bfa-982a-628f8ed32192",
        "credentials": {
          "slackApi": {
            "id": "6GivNGp5N2Az5SNc",
            "name": "Slack"
          }
        }
      },
      {
        "parameters": {
          "authentication": "jwt",
          "company": "Altiverr",
          "lastname": "Zienert",
          "additionalFields": {}
        },
        "type": "n8n-nodes-base.salesforce",
        "typeVersion": 1,
        "position": [
          -140,
          -20
        ],
        "id": "e2b234db-4d24-4ac0-a96d-558a89171b18",
        "name": "Salesforce",
        "credentials": {
          "salesforceJwtApi": {
            "id": "8BBN5Kqc1EopIChs",
            "name": "Salesforce"
          }
        }
      }
    ],
    "connections": {
      "Set Variables": {
        "main": [
          [
            {
              "node": "Poll Queue",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Poll Queue": {
        "main": [
          [
            {
              "node": "Message Found?",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Message Found?": {
        "main": [
          [
            {
              "node": "Split Out",
              "type": "main",
              "index": 0
            }
          ],
          []
        ]
      },
      "Schedule Trigger": {
        "main": [
          [
            {
              "node": "Set Variables",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Airtable": {
        "main": [
          []
        ]
      },
      "Edit Fields": {
        "main": [
          [
            {
              "node": "Airtable",
              "type": "main",
              "index": 0
            },
            {
              "node": "HTTP Request",
              "type": "main",
              "index": 0
            },
            {
              "node": "Slack",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Split Out": {
        "main": [
          [
            {
              "node": "Edit Fields",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "HTTP Request": {
        "main": [
          []
        ]
      }
    },
    "settings": {
      "executionOrder": "v1",
      "timezone": "America/Denver",
      "callerPolicy": "workflowsFromSameOwner"
    },
    "staticData": {
      "node:Schedule Trigger": {
        "recurrenceRules": []
      }
    },
    "meta": {
      "templateCredsSetupCompleted": true
    },
    "pinData": {},
    "versionId": "4fd4f0d2-d283-49a3-aa9c-29097dadbdb8",
    "triggerCount": 1,
    "tags": []
  },
  {
    "createdAt": "2025-04-22T17:15:21.572Z",
    "updatedAt": "2025-04-25T21:43:29.000Z",
    "id": "EpCDn7j48TbH1RbV",
    "name": "Micromobility IG post",
    "active": false,
    "nodes": [
      {
        "parameters": {
          "hostUrl": "=graph.instagram.com",
          "httpRequestMethod": "POST",
          "graphApiVersion": "v20.0",
          "node": "={{ $json.instagram_business_account_id }}",
          "edge": "media",
          "options": {
            "queryParameters": {
              "parameter": [
                {
                  "name": "image_url",
                  "value": "={{ $json.image_url }}"
                },
                {
                  "name": "caption",
                  "value": "={{ $json.instagram_post_caption }}"
                }
              ]
            }
          }
        },
        "id": "3ce0cc70-a124-45fd-ae36-d140c8d62762",
        "name": "Instagram prepare media",
        "type": "n8n-nodes-base.facebookGraphApi",
        "position": [
          80,
          100
        ],
        "typeVersion": 1,
        "credentials": {
          "facebookGraphApi": {
            "id": "J5kboAYyDrhWmSIj",
            "name": "Facebook Graph account"
          }
        }
      },
      {
        "parameters": {
          "hostUrl": "=graph.instagram.com",
          "httpRequestMethod": "POST",
          "graphApiVersion": "v20.0",
          "node": "={{ $('Instagram params').item.json.instagram_business_account_id }}",
          "edge": "media_publish",
          "options": {
            "queryParameters": {
              "parameter": [
                {
                  "name": "creation_id",
                  "value": "={{ $json.id }}"
                }
              ]
            }
          }
        },
        "id": "3e69e209-ab72-47eb-be36-6a51313fe472",
        "name": "Instagram publish media",
        "type": "n8n-nodes-base.facebookGraphApi",
        "position": [
          620,
          20
        ],
        "typeVersion": 1,
        "credentials": {
          "facebookGraphApi": {
            "id": "FUIOq5tqebdxJXfJ",
            "name": "Facebook Graph account 2"
          }
        }
      },
      {
        "parameters": {},
        "id": "c6dd322d-579d-443a-b5cc-fa52733f499f",
        "name": "When clicking ‘Test workflow’",
        "type": "n8n-nodes-base.manualTrigger",
        "position": [
          -540,
          100
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "content": "Choose the trigger you want for example trigger this workflow from another one",
          "height": 248.90655871788812
        },
        "id": "6d42cf9b-9d5c-4017-9913-56fee4c407f9",
        "name": "Sticky Note",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          -420,
          40
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "content": "Add your credential",
          "height": 430.4091991661993,
          "width": 1329.8249455924943,
          "color": 4
        },
        "id": "06b0e022-0957-49e0-8340-b6d0757107bb",
        "name": "Sticky Note1",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          40,
          -40
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "225df266-bf29-4415-b04c-2750cef4506a",
                "name": "image_url",
                "type": "string",
                "value": "https://micromobility-mayhem.s3.us-west-1.amazonaws.com/IMG_6102.JPG?response-content-disposition=inline&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEJ3%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLXdlc3QtMSJHMEUCID43lLe%2BCn%2FxWb2nvOcP8UaU3A2G89pAB1BX7NYS%2F1qVAiEAl6rlJq%2FtYYyJPYeWahJwFwShGIZ0UZM9eDgb5bQBrLgquQMINhABGgw2MTkzMjY5Nzc4NzMiDOLbwTHIeyLDrvfWvCqWA1ZWDBl5bCWfAoBDSvPNnR7NbPV6AFnwTPr%2Bx1DuATn0yMekHwUwDgJ6M1f7MwgQiWL4gWF3Oa9UAHRFhleWthWcA3y0EGwyxgQjtbVNS03dZNIUs1jMj9VMLCyh%2FRqM4RI3nzdIMMwpNZWE9fWyZfys1o77i4ikdazv4ui6JH%2BE5znrJZau64AJjmGgZmcM5LQcPNACnYLspc0DJxCuS040nmFcXhDlABZIo14yu4QV%2By%2BTV%2FnA5IcKm1PKHtKUleWoik5p95%2FZ56dUTLi3UZsDxjCnXIWTsRq7yxmMsyAs7ewAP5IwRqaiOvYd8dWTPq015kACJNkIEhBkyzOjHvZfEuTjJ1cJBVUjsZ4oHqCDZhMTKW8y7wMKjhrz3sKSO1qsNPIcUqaz4P8K72EbMjrq5BVTGZLg%2FN8b5PHrXZPIdPogZwAr%2BcGGg%2BR6N2%2FwfPncFACnNlC1tFxiOVa3Xg%2FGi1U3tRMQovrcRTDPcJTXEZd%2BkcHljahu6SYZCh9Y%2BtN0BMOudbCrB8l2Sz0hxpDAwC4eH7cwsqWvwAY63gK3WOstOcdz4Ozf17j2BxyvdRdTiYbCUHXjts%2FTFEg6AxyWrlRorbVjShNV3tUDQk61B5uNdedkh7Va%2BSVgAM0UJgCN0dLERhm0w0474gXuUervEgbf%2B2ymS6dHEnrsBfrVkrzazF0h%2BnqbsVuVzzXHGV6NksNEb%2FNsPPa%2FwSQgrdOn8JemGT80bigbMrewoyav5I10g%2FtHl5ykNaz6EGptlTuWb%2BoRDZJ6jkVf6shswY9CCwVVOf9yjhF4eVdjSNcAUhOlzkugVIhw0fnGA%2BTubcf1iXAzAMzPtlFNSN1gFFeJawm72mr1cXuzeRd2rd6uGbC6oaRwrCyC8luAn6MOgBKBZlKnF6H6SP%2FIDy0W0va7Bb20arV0bsc8UvmQrGruKEKW1hrjEjzv2OXQoy54B8C6OhX1mu1MZVTugfi33KGQO%2FsLSHOaXPn3MvNbP0xzMROk3UFJgM340RYNRA%3D%3D&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAZAMWDW5I64C767P5%2F20250425%2Fus-west-1%2Fs3%2Faws4_request&X-Amz-Date=20250425T211902Z&X-Amz-Expires=3600&X-Amz-SignedHeaders=host&X-Amz-Signature=a9af9f02112a02f4921aaf23192c79feac79c82e9f2055ceeef72bfbe5ca9f3d"
              },
              {
                "id": "1e380c14-e908-4eeb-90e0-957a422829d0",
                "name": "instagram_business_account_id",
                "type": "string",
                "value": "17841472915595342"
              },
              {
                "id": "f35e3093-1bff-4cc6-a6c4-909dca314cc7",
                "name": "instagram_post_caption",
                "type": "string",
                "value": "A rogue Bird scooter lies abandoned in a designated parking zone, marked by a chalk outline like a micromobility crime scene. The urban jungle claims another victim in the great scooter apocalypse.  #MicromobilityMayhem #FashionNovaFunerals #ScooterCSI #Denver"
              }
            ]
          },
          "options": {}
        },
        "id": "288af1ee-7a94-4bac-b286-3b40f46b1985",
        "name": "Instagram params",
        "type": "n8n-nodes-base.set",
        "position": [
          -120,
          100
        ],
        "typeVersion": 3.4
      },
      {
        "parameters": {
          "graphApiVersion": "v20.0",
          "node": "=me",
          "options": {
            "fields": {
              "field": [
                {
                  "name": "name"
                },
                {
                  "name": "micromobility_mayhem"
                }
              ]
            }
          }
        },
        "id": "371dbc81-b644-4fe0-a8a6-a47f182b2e95",
        "name": "Node just for retrive id of instagram page",
        "type": "n8n-nodes-base.facebookGraphApi",
        "position": [
          -180,
          -260
        ],
        "typeVersion": 1,
        "credentials": {
          "facebookGraphApi": {
            "id": "FUIOq5tqebdxJXfJ",
            "name": "Facebook Graph account 2"
          }
        }
      },
      {
        "parameters": {
          "content": "You can use this node if you want to retrieve the instagram id. \n\nAdd it to the workflow ore use manually",
          "height": 289,
          "width": 318,
          "color": 5
        },
        "id": "c63e5ab7-c9f1-4bb6-97da-b7431800b206",
        "name": "Sticky Note2",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          -260,
          -360
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "content": "Here we have all parameters for posting in instagram image url, caption and instagram business profile id",
          "height": 310,
          "width": 188,
          "color": 3
        },
        "id": "a9169fd1-a830-4c0e-bf43-0896b8436ae0",
        "name": "Sticky Note3",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          -160,
          -40
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "content": "## Permissions\nPublishing relies on a combination of the following permissions. The exact combination depends on which endpoints your app uses. Refer to our endpoint references to determine which permissions each endpoint requires.\n\nads_management\nbusiness_management\ninstagram_basic\ninstagram_content_publish\npages_read_engagement\nIf your app will be used by app users who do not have a role on your app or a role in a Business that has claimed your app, you must request approval for each permission via App Review before non-role app users can grant them to your app.\n\n## Limitations\nJPEG is the only image format supported. Extended JPEG formats such as MPO and JPS are not supported.\nShopping tags are not supported.\nBranded content tags are not supported.\nFilters are not supported.\nPublishing to Instagram TV is not supported.\nFor additional limitations, refer to each endpoint's reference.\n\n## Rate Limit\nInstagram accounts are limited to 50 API-published posts within a rolling 24-hour period. Carousels count as a single post. This limit is enforced on the POST /{ig-user-id}/media_publish endpoint when attempting to publish a media container. We recommend that your app also enforce the publishing rate limit, especially if your app allows app users to schedule posts to be published in the future.\n\nTo check an Instagram Professional account's current rate limit usage, query the GET /{ig-user-id}/content_publishing_limit endpoint.",
          "height": 792,
          "width": 439.10253951549294,
          "color": 7
        },
        "id": "115b25c5-6349-4734-8816-11916c98ac3e",
        "name": "Sticky Note4",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          -420,
          280
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "content": "## Instagram single image Post Workflow with Facebook API\n\nthis is a workflow for post a single image on instagram\n\n\nP.S: if you want use instagram API you need just change the default url in node with graph.instagram.com",
          "height": 232.74275402436496,
          "width": 365.0530681548117,
          "color": 2
        },
        "id": "ae6d60b0-4725-42d5-8df7-4a3980e84a63",
        "name": "Sticky Note6",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          -860,
          -220
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "hostUrl": "=graph.instagram.com",
          "graphApiVersion": "v20.0",
          "node": "={{ $json.id }}",
          "options": {
            "fields": {
              "field": [
                {
                  "name": "id"
                },
                {
                  "name": "status"
                },
                {
                  "name": "status_code"
                }
              ]
            }
          }
        },
        "id": "ecd366af-2f9e-4471-8fbf-aa510019f46e",
        "name": "Instagram check status of media uploaded before",
        "type": "n8n-nodes-base.facebookGraphApi",
        "position": [
          260,
          100
        ],
        "typeVersion": 1,
        "credentials": {
          "facebookGraphApi": {
            "id": "FUIOq5tqebdxJXfJ",
            "name": "Facebook Graph account 2"
          }
        }
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "version": 2,
              "leftValue": "",
              "caseSensitive": true,
              "typeValidation": "strict"
            },
            "combinator": "and",
            "conditions": [
              {
                "id": "0304efee-33b2-499e-bad1-9238c1fc2999",
                "operator": {
                  "name": "filter.operator.equals",
                  "type": "string",
                  "operation": "equals"
                },
                "leftValue": "={{ $json.status_code }}",
                "rightValue": "FINISHED"
              }
            ]
          },
          "options": {}
        },
        "id": "e36cd995-2456-44ab-b80b-32b928889755",
        "name": "If media status is finished",
        "type": "n8n-nodes-base.if",
        "position": [
          420,
          100
        ],
        "typeVersion": 2.2
      },
      {
        "parameters": {
          "hostUrl": "=graph.instagram.com",
          "graphApiVersion": "v20.0",
          "node": "={{ $('Instagram check status of media uploaded before').item.json.id }}",
          "options": {
            "fields": {
              "field": [
                {
                  "name": "id"
                },
                {
                  "name": "status"
                },
                {
                  "name": "status_code"
                }
              ]
            }
          }
        },
        "id": "bcee4647-be4a-4c62-b70c-dfd0e653a02a",
        "name": "Instagram check status of media published before",
        "type": "n8n-nodes-base.facebookGraphApi",
        "position": [
          820,
          20
        ],
        "typeVersion": 1,
        "credentials": {
          "facebookGraphApi": {
            "id": "FUIOq5tqebdxJXfJ",
            "name": "Facebook Graph account 2"
          }
        }
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "version": 2,
              "leftValue": "",
              "caseSensitive": true,
              "typeValidation": "strict"
            },
            "combinator": "and",
            "conditions": [
              {
                "id": "0304efee-33b2-499e-bad1-9238c1fc2999",
                "operator": {
                  "name": "filter.operator.equals",
                  "type": "string",
                  "operation": "equals"
                },
                "leftValue": "={{ $json.status_code }}",
                "rightValue": "PUBLISHED"
              }
            ]
          },
          "options": {}
        },
        "id": "e74d1223-4e3c-45d8-91dd-215efc8c203c",
        "name": "If media status is finished1",
        "type": "n8n-nodes-base.if",
        "position": [
          1020,
          20
        ],
        "typeVersion": 2.2
      },
      {
        "parameters": {
          "options": {}
        },
        "id": "92a80391-8a42-41bc-9ad0-42d1439e7680",
        "name": "Send Email",
        "type": "n8n-nodes-base.emailSend",
        "position": [
          620,
          240
        ],
        "typeVersion": 2.1,
        "webhookId": "61e5cc2e-d201-4dfd-8b6e-730e276e2e26"
      },
      {
        "parameters": {
          "options": {}
        },
        "id": "7f8f50e3-cb01-4a8f-a64b-a90c48465625",
        "name": "Send Email1",
        "type": "n8n-nodes-base.emailSend",
        "position": [
          1240,
          -20
        ],
        "typeVersion": 2.1,
        "webhookId": "443d318c-b2a5-45a1-9879-cd6c9dc96e15"
      },
      {
        "parameters": {
          "options": {}
        },
        "id": "81a3fc9c-ae6e-439f-b09e-c484fee946c1",
        "name": "Send Email2",
        "type": "n8n-nodes-base.emailSend",
        "position": [
          1240,
          140
        ],
        "typeVersion": 2.1,
        "webhookId": "81453da4-09bc-4928-8ae6-84271ab39ca8"
      },
      {
        "parameters": {
          "content": "You can send email for unsuccessful upload or what you want, you can trigger another workflow or another node",
          "height": 102.11100456713636,
          "color": 3
        },
        "id": "84371ec3-fe9e-4e6e-8167-4b7774794957",
        "name": "Sticky Note5",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          560,
          400
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "content": "You can send email for unsuccessful publishing or what you want, you can trigger another workflow or another node",
          "height": 112.31608359812239,
          "color": 3
        },
        "id": "b7a9907c-6f22-4621-a695-128e4aa7a0d7",
        "name": "Sticky Note7",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          1420,
          140
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "content": "You can send email for successfull publishing or what you want, you can trigger another workflow or another node",
          "height": 112.31608359812239,
          "color": 3
        },
        "id": "e51e5e5d-6d06-4334-bc75-52f0e8b96d0e",
        "name": "Sticky Note8",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          1420,
          -20
        ],
        "typeVersion": 1
      }
    ],
    "connections": {
      "Instagram params": {
        "main": [
          [
            {
              "node": "Instagram prepare media",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Instagram prepare media": {
        "main": [
          [
            {
              "node": "Instagram check status of media uploaded before",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Instagram publish media": {
        "main": [
          [
            {
              "node": "Instagram check status of media published before",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "If media status is finished": {
        "main": [
          [
            {
              "node": "Instagram publish media",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Send Email",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "If media status is finished1": {
        "main": [
          [
            {
              "node": "Send Email1",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Send Email2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "When clicking ‘Test workflow’": {
        "main": [
          [
            {
              "node": "Instagram params",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Instagram check status of media uploaded before": {
        "main": [
          [
            {
              "node": "If media status is finished",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Instagram check status of media published before": {
        "main": [
          [
            {
              "node": "If media status is finished1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Node just for retrive id of instagram page": {
        "main": [
          []
        ]
      }
    },
    "settings": {
      "executionOrder": "v1"
    },
    "staticData": null,
    "meta": null,
    "pinData": {},
    "versionId": "882837e5-9d8e-4989-8acd-c26d367a6621",
    "triggerCount": 0,
    "tags": []
  },
  {
    "createdAt": "2025-04-25T21:44:41.460Z",
    "updatedAt": "2025-05-06T21:38:03.000Z",
    "id": "EZL3cK0CjsrNHJXK",
    "name": "AI Agent",
    "active": false,
    "nodes": [
      {
        "parameters": {
          "operation": "getAll",
          "calendar": {
            "__rl": true,
            "value": "mzienert@gmail.com",
            "mode": "list",
            "cachedResultName": "Matt Zienert"
          },
          "returnAll": true,
          "options": {
            "timeMin": "={{ $fromAI('after', 'The earliest datetime we want to look for events for') }}",
            "timeMax": "={{ $fromAI('before', 'The latest datetime we want to look for events for') }}",
            "singleEvents": true,
            "query": "={{ $fromAI('query', 'The search query to look for in the calendar. Leave empty if no search query is needed') }}"
          }
        },
        "id": "0d7e4666-bc0e-489a-9e8f-a5ef191f4954",
        "name": "Google Calendar",
        "type": "n8n-nodes-base.googleCalendarTool",
        "typeVersion": 1.2,
        "position": [
          800,
          220
        ],
        "credentials": {
          "googleCalendarOAuth2Api": {
            "id": "TJGzYuCEYBkAdvwA",
            "name": "Google Calendar account 2"
          }
        }
      },
      {
        "parameters": {
          "public": true,
          "options": {}
        },
        "id": "5b410409-5b0b-47bd-b413-5b9b1000a063",
        "name": "When chat message received",
        "type": "@n8n/n8n-nodes-langchain.chatTrigger",
        "typeVersion": 1.1,
        "position": [
          360,
          20
        ],
        "webhookId": "a889d2ae-2159-402f-b326-5f61e90f602e"
      },
      {
        "parameters": {
          "options": {
            "systemMessage": "=You're a helpful assistant that helps the user answer questions about their calendar.\n\nToday is {{ $now.format('cccc') }} the {{ $now.format('yyyy-MM-dd HH:mm') }}."
          }
        },
        "id": "29963449-1dc1-487d-96f2-7ff0a5c3cd97",
        "name": "AI Agent",
        "type": "@n8n/n8n-nodes-langchain.agent",
        "typeVersion": 1.7,
        "position": [
          560,
          20
        ]
      },
      {
        "parameters": {},
        "id": "75481370-bade-4d90-a878-3a3b0201edcc",
        "name": "Memory",
        "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "typeVersion": 1.3,
        "position": [
          680,
          220
        ]
      },
      {
        "parameters": {
          "model": "mannix/llama3.1-8b-abliterated:q4_k_m",
          "options": {}
        },
        "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
        "typeVersion": 1,
        "position": [
          540,
          220
        ],
        "id": "a4fc3413-8586-4a82-9b37-bf46074a0412",
        "name": "Ollama Chat Model",
        "credentials": {
          "ollamaApi": {
            "id": "j3K3GzLro9sWbwV0",
            "name": "Ollama"
          }
        }
      },
      {
        "parameters": {
          "model": {
            "__rl": true,
            "value": "gpt-3.5-turbo",
            "mode": "list",
            "cachedResultName": "gpt-3.5-turbo"
          },
          "options": {}
        },
        "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "typeVersion": 1.2,
        "position": [
          420,
          220
        ],
        "id": "10ac02c3-ec42-4f63-9807-2b65a6f20a40",
        "name": "OpenAI Chat Model",
        "credentials": {
          "openAiApi": {
            "id": "MBF5oRayAg7j21xY",
            "name": "OpenAi account"
          }
        }
      }
    ],
    "connections": {
      "Google Calendar": {
        "ai_tool": [
          [
            {
              "node": "AI Agent",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      },
      "When chat message received": {
        "main": [
          [
            {
              "node": "AI Agent",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Memory": {
        "ai_memory": [
          [
            {
              "node": "AI Agent",
              "type": "ai_memory",
              "index": 0
            }
          ]
        ]
      },
      "Ollama Chat Model": {
        "ai_languageModel": [
          []
        ]
      },
      "OpenAI Chat Model": {
        "ai_languageModel": [
          [
            {
              "node": "AI Agent",
              "type": "ai_languageModel",
              "index": 0
            }
          ]
        ]
      }
    },
    "settings": {
      "executionOrder": "v1"
    },
    "staticData": null,
    "meta": {
      "templateId": "PT1i+zU92Ii5O2XCObkhfHJR5h9rNJTpiCIkYJk9jHU=",
      "templateCredsSetupCompleted": true
    },
    "pinData": {},
    "versionId": "0ec6c9b8-58da-4e69-94da-55d9fc025667",
    "triggerCount": 0,
    "tags": []
  },
  {
    "createdAt": "2025-04-25T23:09:09.691Z",
    "updatedAt": "2025-04-26T04:36:14.000Z",
    "id": "hnefDvoZM4RpGaj8",
    "name": "Loop Example",
    "active": false,
    "nodes": [
      {
        "parameters": {},
        "id": "c67f31b5-ca60-40b4-b0bc-2dba2e488e5e",
        "name": "Result1",
        "type": "n8n-nodes-base.noOp",
        "position": [
          1840,
          400
        ],
        "notesInFlow": true,
        "typeVersion": 1,
        "notes": "Look Here to see resulting output"
      },
      {
        "parameters": {},
        "id": "cf6a825f-d02c-4be3-b8f6-a916740c8bdd",
        "name": "Result2",
        "type": "n8n-nodes-base.noOp",
        "position": [
          1840,
          720
        ],
        "notesInFlow": true,
        "typeVersion": 1,
        "notes": "Look here to see resulting output"
      },
      {
        "parameters": {
          "content": "\n### Result1 shows that the array of strings is seen as one item by Loop1",
          "height": 240,
          "width": 320,
          "color": 3
        },
        "id": "ca4e02dd-2ec4-4149-a449-01a17c0f5544",
        "name": "Sticky Note",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          1760,
          340
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "content": "### Result2 shows that the Loop2 sees 5 items after the array of strings is split into separate objects",
          "height": 260,
          "width": 320,
          "color": 3
        },
        "id": "82f9b3da-b420-4ae7-aabe-665bd4c63dd8",
        "name": "Sticky Note1",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          1760,
          620
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "content": "# N8N for Beginners: Looping Over Items\n\n## Description\n\nThis workflow is designed for **n8n beginners** to understand how n8n handles **looping (iteration)** over multiple items. It highlights two key behaviors:\n\n- **Built-In Looping:** By default, most n8n nodes iterate over each item in an input array.\n- **Explicit Looping:** The **Loop Over Items** node allows controlled iteration, enabling **custom batch processing** and multi-step workflows.\n\nThis workflow demonstrates the difference between processing an **unsplit array of strings (single item)** vs. **a split array (multiple items)**.\n\n---\n\n## Setup\n\n### 1. Input Data\n\nTo begin, **paste the following JSON** into the **Manual Trigger** node:\n\n```json\n{\n  \"urls\": [\n    \"https://www.reddit.com\",\n    \"https://www.n8n.io/\",\n    \"https://n8n.io/\",\n    \"https://supabase.com/\",\n    \"https://duckduckgo.com/\"\n  ]\n}\n```\n\nðŸ“Œ **Steps to Paste Data:**\n- **Double-click** the \"Manual Trigger\" node.\n- Click **\"Edit Output\"** (top-right corner).\n- Paste the JSON and **Save**.\n- The node **turns purple**, indicating that test data is pinned. \n\n---\n\n## Explanation of the n8n Nodes in the Workflow\n\n### Manual Trigger  \nThis node starts the workflow manually and sends test data.  \n**Documentation:** [Manual Trigger Node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.manualtrigger/)\n\n### Split Out (Split Array of Strings into Array of Objects)  \nExtracts the `urls` array and splits it so that each URL becomes a separate JSON object.  \n**Documentation:** [Split Out Node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.splitout/)\n\n### Loop Over Items (Loop Over Items 1)  \nDemonstrates how an **unsplit** array is treated as one item, processing it as a single unit.  \n**Documentation:** [Loop Over Items Node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.splitinbatches/)\n\n### Loop Over Items (Loop Over Items 2)  \nProcesses the **split array** one item at a time. This demonstrates individual iteration and controlled looping.  \n**Documentation:** [Loop Over Items Node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.splitinbatches/)\n\n### Wait Node  \nIntroduces a **1-second delay** per iteration to demonstrate sequential execution. This can be removed for faster performance.  \n**Documentation:** [Wait Node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.wait/)\n\n### Code Nodes (Add param1 to outputX)  \nEach Code node adds a constant field (`param1`) to the data, ensuring that every item gets enriched with the same parameter.  \n**Documentation:** [Code Node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.code/)\n\n### NoOp Nodes (Result1, Result2, Result3, Result4, Result5)\nThese nodes display the output at different stages of the workflow for inspection.\n**Documentation:** [NoOp Node](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.noop/)\n\n\n\n---\n\n## Execution Details\n\n### 1. How the Workflow Runs\n\n- **Manual Trigger starts execution** with the pasted JSON data.\n- The workflow follows **two paths**:\n\n#### Unsplit Array Path â†’ Loop Over Items 1  \n- The original JSON is processed **as a single item**.  \n- **Result1 & Result5:** Show that the array was **not split** before processing.\n\n#### Split Array Path â†’ Split Out â†’ Loop Over Items 2  \n- The **Split Out** node converts the `urls` array into separate objects.\n- The **Loop Over Items 2** node processes each URL **one by one**.\n- A **Wait node** (1-second delay) demonstrates **controlled execution**.\n- **Code nodes** modify the JSON, adding the field (`param1`).\n- **Result2, Result3, Result4:** Display the final processed output.\n\n### 2. What You Will See\n\n- **Result1 & Result5:** The entire array is processed **as one item** before splitting.\n- **Result2, Result3, Result4:** Each URL is processed **individually** after being split.\n- **Wait Node:** Adds a **1-second delay per item** in **Loop Over Items 2**.\n\n---\n\n## Notes\n\n- Sticky notes are included in the workflow **for easy reference**.\n- The **Wait node** is **optional**â€”remove it for faster execution.\n- This template is structured for **beginners** but serves as a **building block** for more advanced automations.\n\n---\n\n",
          "height": 2480,
          "width": 1200
        },
        "id": "b179b5c9-7cc1-4c50-9e26-3ca9b56aab2b",
        "name": "Sticky Note2",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          -720,
          -380
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "fieldToSplitOut": "urls",
          "options": {
            "destinationFieldName": "url"
          }
        },
        "id": "2b7aedaa-38b0-40b2-89c1-51a70179787f",
        "name": "Split Array of Strings into Array of Objects",
        "type": "n8n-nodes-base.splitOut",
        "position": [
          940,
          1060
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "content": "### Result4 shows that we can turn off the looping feature by setting the looping behavior to \"Run Once For All Items\"",
          "height": 260,
          "width": 320,
          "color": 3
        },
        "id": "d62c7611-008b-4276-870a-27498f797101",
        "name": "Sticky Note3",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          1760,
          1380
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "content": "### Result3 shows that looping over items is built in to n8n nodes",
          "height": 240,
          "width": 320,
          "color": 3
        },
        "id": "d75f6e3d-684d-4d08-b926-1ae08fcd5e84",
        "name": "Sticky Note4",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          1760,
          1100
        ],
        "typeVersion": 1
      },
      {
        "parameters": {},
        "id": "1e9e073a-c1d2-4855-a115-ef85a4a09eb1",
        "name": "Result3",
        "type": "n8n-nodes-base.noOp",
        "position": [
          1860,
          1180
        ],
        "notesInFlow": true,
        "typeVersion": 1,
        "notes": "Look here to see resulting output"
      },
      {
        "parameters": {},
        "id": "285ae427-586a-4e49-88d5-0fd114dae8f2",
        "name": "Result4",
        "type": "n8n-nodes-base.noOp",
        "position": [
          1860,
          1460
        ],
        "notesInFlow": true,
        "typeVersion": 1,
        "notes": "Look here to see resulting output"
      },
      {
        "parameters": {
          "content": "### Result5 shows that the array of strings is seen as one item by Code5. So the behavior is the same as Loop1",
          "height": 260,
          "width": 320,
          "color": 3
        },
        "id": "21e013d8-7f7f-4224-92da-b182c1e6c545",
        "name": "Sticky Note5",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          1760,
          40
        ],
        "typeVersion": 1
      },
      {
        "parameters": {},
        "id": "f9047392-8bf0-4f81-b631-7755166e1701",
        "name": "Result5",
        "type": "n8n-nodes-base.noOp",
        "position": [
          1840,
          140
        ],
        "notesInFlow": true,
        "typeVersion": 1,
        "notes": "Look here to see resulting output"
      },
      {
        "parameters": {},
        "id": "0e2c905e-84fb-4b44-8691-65c2dfd8da40",
        "name": "Paste JSON into this node",
        "type": "n8n-nodes-base.manualTrigger",
        "position": [
          560,
          140
        ],
        "typeVersion": 1,
        "notesInFlow": false
      },
      {
        "parameters": {
          "jsCode": "\n  $json.param1 =  'add_me_to_all_items_and_name_me_param1';\n\n\nreturn $json"
        },
        "id": "fc2f6c1f-1bf1-4e6c-9c3c-f23541ef00ff",
        "name": "Add param1 to output5",
        "type": "n8n-nodes-base.code",
        "position": [
          1280,
          140
        ],
        "typeVersion": 2,
        "alwaysOutputData": true
      },
      {
        "parameters": {
          "mode": "runOnceForEachItem",
          "jsCode": "\n  $json.param1 = \"add_me_to_all_items_and_name_me_param1\"\n\nreturn $json"
        },
        "id": "55af6759-850d-4aad-9ad1-7beb502d3c65",
        "name": "Add param1 to output1",
        "type": "n8n-nodes-base.code",
        "position": [
          1460,
          500
        ],
        "typeVersion": 2,
        "alwaysOutputData": true
      },
      {
        "parameters": {
          "options": {}
        },
        "id": "f5181fae-6660-409c-847a-032f71bcafd9",
        "name": "Loop over Items 2",
        "type": "n8n-nodes-base.splitInBatches",
        "position": [
          1280,
          740
        ],
        "typeVersion": 3
      },
      {
        "parameters": {
          "options": {
            "reset": false
          }
        },
        "id": "e78cfd54-bc84-4c40-98c0-29796106af08",
        "name": "Loop over Items 1",
        "type": "n8n-nodes-base.splitInBatches",
        "position": [
          1280,
          420
        ],
        "typeVersion": 3
      },
      {
        "parameters": {
          "mode": "runOnceForEachItem",
          "jsCode": "\n  $json.param1 =   \"add_me_to_all_items_and_name_me_param1\"\n\n\nreturn $json"
        },
        "id": "db472411-9922-4c4b-9652-7cbb441cc39f",
        "name": "Add param1 to output2",
        "type": "n8n-nodes-base.code",
        "position": [
          1640,
          900
        ],
        "typeVersion": 2,
        "alwaysOutputData": true
      },
      {
        "parameters": {
          "mode": "runOnceForEachItem",
          "jsCode": "\n  $json.param1 =   \"add_me_to_all_items_and_name_me_param1\"\n\n\nreturn $json"
        },
        "id": "7867df88-9979-48f4-8de3-b649c45ae850",
        "name": "Add param1 to output3",
        "type": "n8n-nodes-base.code",
        "position": [
          1280,
          1180
        ],
        "typeVersion": 2,
        "alwaysOutputData": true
      },
      {
        "parameters": {
          "jsCode": "\n  $json.param1 =   \"add_me_to_all_items_and_name_me_param1\"\n\n\nreturn $json"
        },
        "id": "a0aab0a9-a460-4410-8bf8-a7fcb0af83b3",
        "name": "Add param1 to output4",
        "type": "n8n-nodes-base.code",
        "position": [
          1280,
          1460
        ],
        "typeVersion": 2,
        "alwaysOutputData": true
      },
      {
        "parameters": {
          "amount": 1
        },
        "id": "298e6c4d-c0f3-4c81-82c9-21e7590e7c4d",
        "name": "Wait one second(just for show)",
        "type": "n8n-nodes-base.wait",
        "position": [
          1440,
          860
        ],
        "webhookId": "61aef80b-4e9d-43ae-a083-cd87b4fdec11",
        "typeVersion": 1.1
      }
    ],
    "connections": {
      "Loop over Items 1": {
        "main": [
          [
            {
              "node": "Result1",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Add param1 to output1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Loop over Items 2": {
        "main": [
          [
            {
              "node": "Result2",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Wait one second(just for show)",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Add param1 to output1": {
        "main": [
          [
            {
              "node": "Loop over Items 1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Add param1 to output2": {
        "main": [
          [
            {
              "node": "Loop over Items 2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Add param1 to output3": {
        "main": [
          [
            {
              "node": "Result3",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Add param1 to output4": {
        "main": [
          [
            {
              "node": "Result4",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Add param1 to output5": {
        "main": [
          [
            {
              "node": "Result5",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Paste JSON into this node": {
        "main": [
          [
            {
              "node": "Split Array of Strings into Array of Objects",
              "type": "main",
              "index": 0
            },
            {
              "node": "Add param1 to output5",
              "type": "main",
              "index": 0
            },
            {
              "node": "Loop over Items 1",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Wait one second(just for show)": {
        "main": [
          [
            {
              "node": "Add param1 to output2",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Split Array of Strings into Array of Objects": {
        "main": [
          [
            {
              "node": "Loop over Items 2",
              "type": "main",
              "index": 0
            },
            {
              "node": "Add param1 to output4",
              "type": "main",
              "index": 0
            },
            {
              "node": "Add param1 to output3",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "settings": {
      "executionOrder": "v1"
    },
    "staticData": null,
    "meta": null,
    "pinData": {
      "Paste JSON into this node": [
        {
          "json": {
            "urls": [
              "https://www.reddit.com",
              "https://www.n8n.io/",
              "https://n8n.io/",
              "https://supabase.com/",
              "https://duckduckgo.com/"
            ]
          }
        }
      ]
    },
    "versionId": "ba8662a6-3c84-4425-8ad3-767512305d4a",
    "triggerCount": 0,
    "tags": []
  },
  {
    "createdAt": "2025-04-28T18:34:09.503Z",
    "updatedAt": "2025-04-29T22:17:24.000Z",
    "id": "Tux2f9zoa3iCwcZO",
    "name": "Lead Gen Workflow",
    "active": false,
    "nodes": [
      {
        "parameters": {
          "options": {}
        },
        "id": "f22bf253-012c-447c-8167-5215ce27d823",
        "name": "Trigger - When User Sends Message",
        "type": "@n8n/n8n-nodes-langchain.chatTrigger",
        "position": [
          380,
          140
        ],
        "webhookId": "e5c0f357-c0a4-4ebc-9162-0382d8009539",
        "typeVersion": 1.1
      },
      {
        "parameters": {
          "options": {
            "systemMessage": "' UNIFIED AND OPTIMIZED PROMPT FOR DATA EXTRACTION VIA GOOGLE MAPS SCRAPER\n\n' --- 1. Task ---\n' - Collect high-quality professional leads from Google Maps, including:\n'   - Business name\n'   - Address\n'   - Phone number\n'   - Website\n'   - Email\n'   - Other relevant contact details\n' - Deliver organized, accurate, and actionable data.\n\n' --- 2. Context & Collaboration ---\n' - Tools & Sources:\n'   * Google Maps Scraper: Extracts data based on location, business type, and country code \n'     (ISO 3166 Alpha-2 in lowercase).\n'   * Website Scraper: Extracts data from provided URLs (the URL must be passed exactly as received, without quotation marks).\n'   * Google Sheets: Stores and retrieves previously extracted data.\n'   * Internet Search: Provides additional information if the scraping results are incomplete.\n' - Priorities: Accuracy and efficiency, avoiding unnecessary searches.\n\n' --- 3. Ethical Guidelines ---\n' - Only extract publicly accessible professional data.\n' - Do not collect or store personal/sensitive data.\n' - Adhere to scraping policies and data protection regulations.\n' - Error Handling:\n'   * In case of failure or incomplete results, suggest a retry, adjusted search parameters, or an alternative source.\n'   * If Google Sheets is unavailable, notify the user and propose workarounds.\n\n' --- 4. Constraints ---\n' - Country codes must follow the ISO 3166 Alpha-2 format in lowercase (e.g., \"fr\" for France).\n' - When using the Website Scraper, pass the URL exactly as provided, without quotation marks or modifications.\n' - Validate and correctly format all data (no duplicates or errors).\n' - Store results in Google Sheets in an organized and accessible manner.\n\n' --- 5. Final Requirements & Quality Checks ---\n' - Verification: Ensure the country code is always passed in lowercase to the Google Maps Scraper.\n' - URL: If a URL is provided, forward it directly to the Website Scraper without adding quotation marks.\n' - Existing Data: Check Google Sheets to see if the data is already available before performing new scraping.\n' - Supplementary: In case of partial results, propose using Internet Search to complete the information.\n\n' --- 6. Interaction ---\n' - If data already exists in Google Sheets, retrieve and present it to the user instead of launching a new scrape.\n' - If scraping fails or returns incomplete results, suggest alternative actions (e.g., web search, verifying the country code).\n\n' --- 7. Examples ---\n' BAD Example (Google Maps Scraper)\n'   User: \"Find coffee shops in Paris, France.\"\n'   AI: \"Extracting coffee shop data from Google Maps in France.\"\n'   > Issue: The country code \"fr\" was not provided.\n'\n' GOOD Example (Google Maps Scraper)\n'   User: \"Find coffee shops in Paris, France.\"\n'   AI:\n'     - \"Extracting coffee shop data from Google Maps in fr (France).\"\n'     - \"Scraped 50 businesses with names, addresses, phone numbers, and websites.\"\n'     - \"Storing results in Google Sheets under Lead_Generation_Paris_FR.\"\n'\n' BAD Example (Website Scraper)\n'   User: \"Scrape data from https://www.example.com/\"\n'   AI: \"Forwarding 'https://www.example.com/' to the Website Scraper.\"\n'   > Issue: Unnecessary quotation marks around the URL.\n'\n' GOOD Example (Website Scraper)\n'   User: \"Scrape data from https://www.example.com/\"\n'   AI:\n'     - \"Forwarding https://www.example.com to the Website Scraper.\"\n'     - \"Processing data extraction and storing results in Google Sheets.\"\n\n' --- 8. Output Format ---\n' - Responses should be concise and informative.\n' - Present data in a structured manner (e.g., business name, address, phone, website, etc.).\n' - If data already exists, clearly display the retrieved information from Google Sheets.\n\n' --- Additional Context & Details ---\n'\n' You interact with scraping APIs and databases to retrieve, update, and manage lead information.\n' Always pass country information using lowercase ISO 3166 Alpha-2 format when using the Google Maps Scraper.\n' If a URL is provided, it must be passed exactly as received, without quotation marks, to the Website Scraper.\n'\n' Known details:\n' You extract business names, addresses, phone numbers, websites, emails, and other relevant contact information.\n'\n' The URL must be passed exactly as provided (e.g., https://www.example.com/) without quotation marks or formatting changes.\n' Google Maps Scraper requires location, business type, and ISO 3166 Alpha-2 country codes to extract business listings.\n'\n' Context:\n' - System environment:\n'   You have direct integration with scraping tools, Internet search capabilities, and Google Sheets.\n'   You interact with scraping APIs and databases to retrieve, update, and manage lead information.\n'\n' Role:\n' You are a Lead Generation & Web Scraping Agent.\n' Your primary responsibility is to identify, collect, and organize relevant business leads by scraping websites, Google Maps, and performing Internet searches.\n' Ensure all extracted data is structured, accurate, and stored properly for easy access and analysis.\n' You have access to two scraping tools:\n'   1. Website Scraper – Requires only the raw URL to extract data from a specific website.\n'      - The URL must be passed exactly as provided (e.g., https://www.example.com/) without quotation marks or formatting changes.\n'   2. Google Maps Scraper – Requires location, business type, and ISO 3166 Alpha-2 country codes to extract business listings.\n\n' --- FINAL INSTRUCTIONS ---\n' 1. Adhere to all the directives and constraints above when extracting data from Google Maps (or other sources).\n' 2. Systematically check if data already exists in Google Sheets.\n' 3. In case of failure or partial results, propose an adjustment to the query or resort to Internet search.\n' 4. Ensure ethical compliance: only collect public data and do not store sensitive information.\n'\n' This prompt will guide the AI agent to efficiently extract and manage business data using Google Maps Scraper (and other mentioned tools)\n' while adhering to the structure, ISO country code standards, and ethical handling of information.\n"
          }
        },
        "id": "f6f3a498-1c26-4845-8771-d8438fe4d54b",
        "name": "AI Agent - Lead Collection",
        "type": "@n8n/n8n-nodes-langchain.agent",
        "position": [
          620,
          140
        ],
        "typeVersion": 1.8
      },
      {
        "parameters": {
          "model": {
            "__rl": true,
            "value": "gpt-4o-mini",
            "mode": "list",
            "cachedResultName": "gpt-4o-mini"
          },
          "options": {}
        },
        "id": "c7d7f800-3243-4a4c-8507-2be3b7e15ceb",
        "name": "GPT-4o - Generate & Process Requests",
        "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "position": [
          420,
          360
        ],
        "typeVersion": 1.2,
        "credentials": {
          "openAiApi": {
            "id": "6eSjR9CqvzhPKVld",
            "name": "OpenAi account"
          }
        }
      },
      {
        "parameters": {
          "contextWindowLength": 50
        },
        "id": "11976355-5b19-4f65-ae1a-23cce94c1c8f",
        "name": "Memory - Track Recent Context",
        "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "position": [
          600,
          360
        ],
        "typeVersion": 1.3
      },
      {
        "parameters": {
          "name": "extract_google_maps",
          "description": "Extract data from hundreds of places fast. Scrape Google Maps by keyword, category, location, URLs & other filters. Get addresses, contact info, opening hours, popular times, prices, menus & more. Export scraped data, run the scraper via API, schedule and monitor runs, or integrate with other tools.",
          "workflowId": {
            "__rl": true,
            "mode": "list",
            "value": "9rD7iD6sbXqDX44S",
            "cachedResultName": "Google Maps - sous 1 - Extract Google maps"
          },
          "workflowInputs": {
            "value": {
              "city": "={{ $fromAI('city', ``, 'string') }}",
              "search": "={{ $fromAI('search', ``, 'string') }}",
              "countryCode": "={{ $fromAI('countryCode', ``, 'string') }}",
              "state/county": "={{ $fromAI('state_county', ``, 'string') }}"
            },
            "schema": [
              {
                "id": "search",
                "type": "string",
                "display": true,
                "required": false,
                "displayName": "search",
                "defaultMatch": false,
                "canBeUsedToMatch": true
              },
              {
                "id": "city",
                "type": "string",
                "display": true,
                "required": false,
                "displayName": "city",
                "defaultMatch": false,
                "canBeUsedToMatch": true
              },
              {
                "id": "state/county",
                "type": "string",
                "display": true,
                "required": false,
                "displayName": "state/county",
                "defaultMatch": false,
                "canBeUsedToMatch": true
              },
              {
                "id": "countryCode",
                "type": "string",
                "display": true,
                "removed": false,
                "required": false,
                "displayName": "countryCode",
                "defaultMatch": false,
                "canBeUsedToMatch": true
              }
            ],
            "mappingMode": "defineBelow",
            "matchingColumns": [],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          }
        },
        "id": "f0f04a9e-4483-4080-a03b-31d92e607f2f",
        "name": "Tool - Scrape Google Maps Business Data",
        "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
        "position": [
          940,
          360
        ],
        "typeVersion": 2.1
      },
      {
        "parameters": {
          "options": {}
        },
        "id": "d8717c21-8af9-4f39-b515-4c636c567b48",
        "name": "Fallback - Enrich with Google Search",
        "type": "@n8n/n8n-nodes-langchain.toolSerpApi",
        "position": [
          760,
          360
        ],
        "typeVersion": 1,
        "credentials": {
          "serpApi": {
            "id": "vm4DPfpUSlgByweA",
            "name": "SerpAPI account"
          }
        }
      },
      {
        "parameters": {
          "content": "# AI-Powered Lead Generation Workflow\n\nThis workflow extracts business data from Google Maps and associated websites using an AI agent.\n\n## Dependencies\n- **OpenAI API**\n- **Google Sheets API**\n- **Apify Actors**: Google Maps Scraper \n- **Apify Actors**: Website Content Crawler\n- **SerpAPI**: Used as a fallback to enrich data\n\n## External Setup Guide\n**Notion** : [Guide](https://automatisation.notion.site/GOOGLE-MAPS-SCRAPER-1cc3d6550fd98005a99cea02986e7b05)\n",
          "height": 540,
          "width": 1300
        },
        "id": "3f8f93b7-84f9-48da-88ff-52a80683d846",
        "name": "Sticky Note",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          0,
          0
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "name": "Website_Content_Crawler",
          "description": "Crawl websites and extract text content to feed AI models, LLM applications, vector databases, or RAG pipelines. The Actor supports rich formatting using Markdown, cleans the HTML, downloads files, and integrates well with 🦜🔗 LangChain, LlamaIndex, and the wider LLM ecosystem.",
          "workflowId": {
            "__rl": true,
            "mode": "list",
            "value": "I7KceT8Mg1lW7BW4",
            "cachedResultName": "Google Maps - sous 2 - Extract Google"
          },
          "workflowInputs": {
            "value": {},
            "schema": [],
            "mappingMode": "defineBelow",
            "matchingColumns": [],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          }
        },
        "id": "8b8d2513-d804-4ee8-a10b-eb41daa1e585",
        "name": "Tool - Crawl Business Website",
        "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
        "position": [
          1120,
          360
        ],
        "typeVersion": 2.1
      },
      {
        "parameters": {
          "inputSource": "passthrough"
        },
        "id": "75cbbcf9-3bed-43e3-8006-899d5354850b",
        "name": "Trigger - On Subworkflow Start",
        "type": "n8n-nodes-base.executeWorkflowTrigger",
        "position": [
          320,
          720
        ],
        "typeVersion": 1.1
      },
      {
        "parameters": {
          "method": "POST",
          "url": "https://api.apify.com/v2/acts/2Mdma1N6Fd0y3QEjR/run-sync-get-dataset-items",
          "sendQuery": true,
          "queryParameters": {
            "parameters": [
              {
                "name": "timeout",
                "value": "3600000"
              }
            ]
          },
          "sendHeaders": true,
          "headerParameters": {
            "parameters": [
              {
                "name": "Content-Type",
                "value": "application/json"
              },
              {
                "name": "Authorization",
                "value": "Bearer apify_api_zl0GUe12WtuhWWndItJJhV9be0EcDs25tu0E"
              }
            ]
          },
          "sendBody": true,
          "specifyBody": "json",
          "jsonBody": "={\n    \"city\": \"{{ $json.city }}\",\n    \"countryCode\": \"{{ $json.countryCode }}\",\n    \"locationQuery\": \"{{ $json.city }}\",\n    \"maxCrawledPlacesPerSearch\": 5,\n    \"searchStringsArray\": [\n        \"{{ $json.search }}\"\n    ],\n    \"skipClosedPlaces\": false\n}",
          "options": {}
        },
        "id": "81147e9c-d540-45cd-8040-01f0dfa20619",
        "name": "Scrape Google Maps (via Apify)",
        "type": "n8n-nodes-base.httpRequest",
        "position": [
          540,
          720
        ],
        "typeVersion": 4.2
      },
      {
        "parameters": {
          "resource": "spreadsheet",
          "title": "Testing",
          "options": {}
        },
        "id": "2fdee644-b5a9-478c-80a5-7d6c3c522a12",
        "name": "Save Extracted Data to Google Sheets",
        "type": "n8n-nodes-base.googleSheets",
        "position": [
          760,
          720
        ],
        "typeVersion": 4.5,
        "credentials": {
          "googleSheetsOAuth2Api": {
            "id": "cVpkUaepIfLBPYcL",
            "name": "Google Sheets account 2"
          }
        }
      },
      {
        "parameters": {
          "aggregate": "aggregateAllItemData",
          "options": {}
        },
        "id": "697acf83-5497-4db1-8ba8-3ad1ba348208",
        "name": "Aggregate Business Listings",
        "type": "n8n-nodes-base.aggregate",
        "position": [
          980,
          720
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "content": "# 📍 Google Maps Extractor Subworkflow\n\nThis subworkflow handles business data extraction from Google Maps using the Apify Google Maps Scraper.\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Purpose\n- Automates the collection of business leads based on:\n  - Search term (e.g., plumber, agency)\n  - City and region\n  - ISO 3166 Alpha-2 country code",
          "height": 440,
          "width": 1300,
          "color": 4
        },
        "id": "e58aa7e2-989c-4639-be70-e7ae99b4efe9",
        "name": "Sticky Note1",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          0,
          580
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "method": "POST",
          "url": "https://api.apify.com/v2/acts/aYG0l9s7dbB7j3gbS/run-sync-get-dataset-items",
          "sendHeaders": true,
          "headerParameters": {
            "parameters": [
              {
                "name": "Content-Type",
                "value": "application/json"
              },
              {
                "name": "Authorization",
                "value": "Bearer apify_api_8UZf2KdZTkPihmNauBubgDsjAYTfKP4nsQSN"
              }
            ]
          },
          "sendBody": true,
          "specifyBody": "json",
          "jsonBody": "={\n    \"aggressivePrune\": false,\n    \"clickElementsCssSelector\": \"[aria-expanded=\\\"false\\\"]\",\n    \"clientSideMinChangePercentage\": 15,\n    \"crawlerType\": \"playwright:adaptive\",\n    \"debugLog\": false,\n    \"debugMode\": false,\n    \"expandIframes\": true,\n    \"ignoreCanonicalUrl\": false,\n    \"keepUrlFragments\": false,\n    \"proxyConfiguration\": {\n        \"useApifyProxy\": true\n    },\n    \"readableTextCharThreshold\": 100,\n    \"removeCookieWarnings\": true,\n    \"removeElementsCssSelector\": \"nav, footer, script, style, noscript, svg, img[src^='data:'],\\n[role=\\\"alert\\\"],\\n[role=\\\"banner\\\"],\\n[role=\\\"dialog\\\"],\\n[role=\\\"alertdialog\\\"],\\n[role=\\\"region\\\"][aria-label*=\\\"skip\\\" i],\\n[aria-modal=\\\"true\\\"]\",\n    \"renderingTypeDetectionPercentage\": 10,\n    \"saveFiles\": false,\n    \"saveHtml\": false,\n    \"saveHtmlAsFile\": false,\n    \"saveMarkdown\": true,\n    \"saveScreenshots\": false,\n    \"startUrls\": [\n        {\n            \"url\": \"{{ $json.query }}\",\n            \"method\": \"GET\"\n        }\n    ],\n    \"useSitemaps\": false\n}",
          "options": {}
        },
        "id": "efd1fedb-ed5e-40db-b7d1-385bf30815e3",
        "name": "Scrape Website Content (via Apify)",
        "type": "n8n-nodes-base.httpRequest",
        "position": [
          460,
          1200
        ],
        "typeVersion": 4.2
      },
      {
        "parameters": {
          "operation": "append",
          "documentId": {
            "__rl": true,
            "mode": "list",
            "value": "1JewfKbdS6gJhVFz0Maz6jpoDxQrByKyy77I5s7UvLD4",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1JewfKbdS6gJhVFz0Maz6jpoDxQrByKyy77I5s7UvLD4/edit?usp=drivesdk",
            "cachedResultName": "GoogleMaps_LEADS"
          },
          "sheetName": {
            "__rl": true,
            "mode": "list",
            "value": 1886744055,
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1JewfKbdS6gJhVFz0Maz6jpoDxQrByKyy77I5s7UvLD4/edit#gid=1886744055",
            "cachedResultName": "MYWEBBASE"
          },
          "columns": {
            "value": {},
            "schema": [
              {
                "id": "url",
                "type": "string",
                "display": true,
                "removed": false,
                "required": false,
                "displayName": "url",
                "defaultMatch": false,
                "canBeUsedToMatch": true
              },
              {
                "id": "crawl",
                "type": "string",
                "display": true,
                "removed": false,
                "required": false,
                "displayName": "crawl",
                "defaultMatch": false,
                "canBeUsedToMatch": true
              },
              {
                "id": "metadata",
                "type": "string",
                "display": true,
                "removed": false,
                "required": false,
                "displayName": "metadata",
                "defaultMatch": false,
                "canBeUsedToMatch": true
              },
              {
                "id": "screenshotUrl",
                "type": "string",
                "display": true,
                "removed": false,
                "required": false,
                "displayName": "screenshotUrl",
                "defaultMatch": false,
                "canBeUsedToMatch": true
              },
              {
                "id": "text",
                "type": "string",
                "display": true,
                "removed": false,
                "required": false,
                "displayName": "text",
                "defaultMatch": false,
                "canBeUsedToMatch": true
              },
              {
                "id": "markdown",
                "type": "string",
                "display": true,
                "removed": false,
                "required": false,
                "displayName": "markdown",
                "defaultMatch": false,
                "canBeUsedToMatch": true
              },
              {
                "id": "debug",
                "type": "string",
                "display": true,
                "removed": false,
                "required": false,
                "displayName": "debug",
                "defaultMatch": false,
                "canBeUsedToMatch": true
              }
            ],
            "mappingMode": "autoMapInputData",
            "matchingColumns": [],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          },
          "options": {}
        },
        "id": "cf0c6605-33c6-41ba-a295-94d91604444c",
        "name": "Save Website Data to Google Sheets",
        "type": "n8n-nodes-base.googleSheets",
        "position": [
          680,
          1200
        ],
        "typeVersion": 4.5,
        "credentials": {
          "googleSheetsOAuth2Api": {
            "id": "cVpkUaepIfLBPYcL",
            "name": "Google Sheets account 2"
          }
        }
      },
      {
        "parameters": {
          "aggregate": "aggregateAllItemData",
          "options": {}
        },
        "id": "7a087b3c-e083-4736-a8bb-f66002dae818",
        "name": "Aggregate Website Content",
        "type": "n8n-nodes-base.aggregate",
        "position": [
          900,
          1200
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "content": "# 🌐 Website Content Crawler Subworkflow\n\nThis subworkflow processes URLs to extract readable website content using Apify's Website Content Crawler.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Purpose\n- Extracts detailed and structured content from business websites.\n- Enhances leads with enriched, on-site information.",
          "height": 400,
          "width": 1300,
          "color": 5
        },
        "id": "c371cf68-d39d-4b14-946c-50f0a2142613",
        "name": "Sticky Note2",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          0,
          1060
        ],
        "typeVersion": 1
      }
    ],
    "connections": {
      "Memory - Track Recent Context": {
        "ai_memory": [
          [
            {
              "node": "AI Agent - Lead Collection",
              "type": "ai_memory",
              "index": 0
            }
          ]
        ]
      },
      "Tool - Crawl Business Website": {
        "ai_tool": [
          [
            {
              "node": "AI Agent - Lead Collection",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      },
      "Scrape Google Maps (via Apify)": {
        "main": [
          [
            {
              "node": "Save Extracted Data to Google Sheets",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Trigger - On Subworkflow Start": {
        "main": [
          [
            {
              "node": "Scrape Google Maps (via Apify)",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Trigger - When User Sends Message": {
        "main": [
          [
            {
              "node": "AI Agent - Lead Collection",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Save Website Data to Google Sheets": {
        "main": [
          [
            {
              "node": "Aggregate Website Content",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Scrape Website Content (via Apify)": {
        "main": [
          [
            {
              "node": "Save Website Data to Google Sheets",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Fallback - Enrich with Google Search": {
        "ai_tool": [
          [
            {
              "node": "AI Agent - Lead Collection",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      },
      "GPT-4o - Generate & Process Requests": {
        "ai_languageModel": [
          [
            {
              "node": "AI Agent - Lead Collection",
              "type": "ai_languageModel",
              "index": 0
            }
          ]
        ]
      },
      "Save Extracted Data to Google Sheets": {
        "main": [
          [
            {
              "node": "Aggregate Business Listings",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Tool - Scrape Google Maps Business Data": {
        "ai_tool": [
          [
            {
              "node": "AI Agent - Lead Collection",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      }
    },
    "settings": {
      "executionOrder": "v1"
    },
    "staticData": null,
    "meta": {
      "templateCredsSetupCompleted": true
    },
    "pinData": {
      "Trigger - On Subworkflow Start": [
        {
          "json": {
            "search": "realtor",
            "city": "Durango",
            "state": "Colorado",
            "countryCode": "us"
          }
        }
      ]
    },
    "versionId": "69cb5096-f75b-4685-84a0-92af69e6925c",
    "triggerCount": 0,
    "tags": []
  },
  {
    "createdAt": "2025-04-28T18:34:15.763Z",
    "updatedAt": "2025-04-28T18:34:15.763Z",
    "id": "JS8WaASeKNYAkE2b",
    "name": "My workflow 2",
    "active": false,
    "nodes": [
      {
        "parameters": {},
        "id": "0be94c43-80a1-49b5-be27-f632c21df340",
        "name": "When clicking ‘Test workflow’",
        "type": "n8n-nodes-base.manualTrigger",
        "position": [
          -220,
          760
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "options": {}
        },
        "id": "c6360d31-59f9-4716-9c53-b2928135291d",
        "name": "Process Each Company",
        "type": "n8n-nodes-base.splitInBatches",
        "position": [
          720,
          760
        ],
        "typeVersion": 3,
        "alwaysOutputData": false,
        "onError": "continueRegularOutput"
      },
      {
        "parameters": {
          "url": "https://api.ghostgenius.fr/v2/company",
          "authentication": "genericCredentialType",
          "genericAuthType": "httpHeaderAuth",
          "sendQuery": true,
          "queryParameters": {
            "parameters": [
              {
                "name": "url",
                "value": "={{ $json.url }}"
              }
            ]
          },
          "options": {
            "batching": {
              "batch": {
                "batchSize": 1,
                "batchInterval": 2000
              }
            }
          }
        },
        "id": "fe58faee-6f14-440c-866b-b19dc4696752",
        "name": "Get Company Info",
        "type": "n8n-nodes-base.httpRequest",
        "position": [
          960,
          760
        ],
        "retryOnFail": true,
        "typeVersion": 4.2,
        "onError": "continueRegularOutput"
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "version": 2,
              "leftValue": "",
              "caseSensitive": true,
              "typeValidation": "strict"
            },
            "combinator": "and",
            "conditions": [
              {
                "id": "5ea943a6-8f6c-4cb0-b194-8c92d4b2aacc",
                "operator": {
                  "type": "string",
                  "operation": "notEmpty",
                  "singleValue": true
                },
                "leftValue": "={{ $json.website }}",
                "rightValue": "[null]"
              },
              {
                "id": "8235b9bb-3cd4-4ed4-a5dc-921127ff47c7",
                "operator": {
                  "type": "number",
                  "operation": "gt"
                },
                "leftValue": "={{ $json.followers_count }}",
                "rightValue": 200
              }
            ]
          },
          "options": {}
        },
        "id": "f767d1cf-36b1-413b-8f9f-1e8c42193fd1",
        "name": "Filter Valid Companies",
        "type": "n8n-nodes-base.if",
        "position": [
          1180,
          760
        ],
        "typeVersion": 2.2,
        "onError": "continueRegularOutput"
      },
      {
        "parameters": {
          "operation": "search",
          "base": {
            "__rl": true,
            "mode": "list",
            "value": "appjYSpxvs8mlJaIW",
            "cachedResultUrl": "https://airtable.com/appjYSpxvs8mlJaIW",
            "cachedResultName": "CRM"
          },
          "table": {
            "__rl": true,
            "mode": "list",
            "value": "tbliG5xhydGGgk3nD",
            "cachedResultUrl": "https://airtable.com/appjYSpxvs8mlJaIW/tbliG5xhydGGgk3nD",
            "cachedResultName": "CRM"
          },
          "filterByFormula": "={id} = '{{ $json.id.toNumber() }}'",
          "options": {}
        },
        "id": "35e43516-b001-4614-b60f-94ee340ee524",
        "name": "Check If Company Exists",
        "type": "n8n-nodes-base.airtable",
        "position": [
          1580,
          760
        ],
        "typeVersion": 2.1,
        "alwaysOutputData": true
      },
      {
        "parameters": {
          "conditions": {
            "options": {
              "version": 2,
              "leftValue": "",
              "caseSensitive": true,
              "typeValidation": "strict"
            },
            "combinator": "and",
            "conditions": [
              {
                "id": "050c33be-c648-44d7-901c-51f6ff024e97",
                "operator": {
                  "type": "object",
                  "operation": "empty",
                  "singleValue": true
                },
                "leftValue": "={{ $('Check If Company Exists').all().first().json }}",
                "rightValue": ""
              }
            ]
          },
          "options": {}
        },
        "id": "8071bbb0-f45a-4a70-b29c-cd9f2e734f86",
        "name": "Is New Company?",
        "type": "n8n-nodes-base.if",
        "position": [
          1820,
          760
        ],
        "typeVersion": 2.2
      },
      {
        "parameters": {
          "operation": "create",
          "base": {
            "__rl": true,
            "mode": "list",
            "value": "appjYSpxvs8mlJaIW",
            "cachedResultUrl": "https://airtable.com/appjYSpxvs8mlJaIW",
            "cachedResultName": "CRM"
          },
          "table": {
            "__rl": true,
            "mode": "list",
            "value": "tbliG5xhydGGgk3nD",
            "cachedResultUrl": "https://airtable.com/appjYSpxvs8mlJaIW/tbliG5xhydGGgk3nD",
            "cachedResultName": "CRM"
          },
          "columns": {
            "value": {
              "id": "={{ $('Filter Valid Companies').item.json.id.toNumber() }}",
              "Name": "={{ $('Filter Valid Companies').item.json.name }}",
              "Country": "🇺🇸 United States",
              "Summary": "={{ $('Filter Valid Companies').item.json.description }}",
              "Tagline": "={{ $('Filter Valid Companies').item.json.tagline }}",
              "Website": "={{ $('Filter Valid Companies').item.json.website }}",
              "Category": "Growth Marketing Agency 11-50 🌍",
              "LinkedIn": "={{ $('Filter Valid Companies').item.json.url }}"
            },
            "schema": [
              {
                "id": "Name",
                "type": "string",
                "display": true,
                "removed": false,
                "readOnly": false,
                "required": false,
                "displayName": "Name",
                "defaultMatch": false,
                "canBeUsedToMatch": true
              },
              {
                "id": "Website",
                "type": "string",
                "display": true,
                "removed": false,
                "readOnly": false,
                "required": false,
                "displayName": "Website",
                "defaultMatch": false,
                "canBeUsedToMatch": true
              },
              {
                "id": "LinkedIn",
                "type": "string",
                "display": true,
                "removed": false,
                "readOnly": false,
                "required": false,
                "displayName": "LinkedIn",
                "defaultMatch": false,
                "canBeUsedToMatch": true
              },
              {
                "id": "Category",
                "type": "options",
                "display": true,
                "options": [
                  {
                    "name": "Growth Marketing Agency 11-50 🌍",
                    "value": "Growth Marketing Agency 11-50 🌍"
                  }
                ],
                "removed": false,
                "readOnly": false,
                "required": false,
                "displayName": "Category",
                "defaultMatch": false,
                "canBeUsedToMatch": true
              },
              {
                "id": "id",
                "type": "number",
                "display": true,
                "removed": false,
                "readOnly": false,
                "required": false,
                "displayName": "id",
                "defaultMatch": false,
                "canBeUsedToMatch": true
              },
              {
                "id": "Tagline",
                "type": "string",
                "display": true,
                "removed": false,
                "readOnly": false,
                "required": false,
                "displayName": "Tagline",
                "defaultMatch": false,
                "canBeUsedToMatch": true
              },
              {
                "id": "Summary",
                "type": "string",
                "display": true,
                "removed": false,
                "readOnly": false,
                "required": false,
                "displayName": "Summary",
                "defaultMatch": false,
                "canBeUsedToMatch": true
              },
              {
                "id": "Index",
                "type": "string",
                "display": true,
                "removed": true,
                "readOnly": true,
                "required": false,
                "displayName": "Index",
                "defaultMatch": false,
                "canBeUsedToMatch": true
              },
              {
                "id": "Country",
                "type": "options",
                "display": true,
                "options": [
                  {
                    "name": "🇨🇱 Chili",
                    "value": "🇨🇱 Chili"
                  },
                  {
                    "name": "🇰🇿 Kazakhstan",
                    "value": "🇰🇿 Kazakhstan"
                  },
                  {
                    "name": "🇸🇪 Suède",
                    "value": "🇸🇪 Suède"
                  },
                  {
                    "name": "🇳🇴 Norvège",
                    "value": "🇳🇴 Norvège"
                  },
                  {
                    "name": "🇵🇪 Pérou",
                    "value": "🇵🇪 Pérou"
                  },
                  {
                    "name": "🇹🇼 Taïwan",
                    "value": "🇹🇼 Taïwan"
                  },
                  {
                    "name": "🇦🇹 Autriche",
                    "value": "🇦🇹 Autriche"
                  },
                  {
                    "name": "🇩🇰 Danemark",
                    "value": "🇩🇰 Danemark"
                  },
                  {
                    "name": "🇷🇺 Russie",
                    "value": "🇷🇺 Russie"
                  },
                  {
                    "name": "🇰🇷 Corée du Sud",
                    "value": "🇰🇷 Corée du Sud"
                  },
                  {
                    "name": "🇪🇪 Estonie",
                    "value": "🇪🇪 Estonie"
                  },
                  {
                    "name": "🇷🇴 Roumanie",
                    "value": "🇷🇴 Roumanie"
                  },
                  {
                    "name": "🇨🇴 Colombie",
                    "value": "🇨🇴 Colombie"
                  },
                  {
                    "name": "🇮🇷 Iran",
                    "value": "🇮🇷 Iran"
                  },
                  {
                    "name": "🇦🇷 Argentine",
                    "value": "🇦🇷 Argentine"
                  },
                  {
                    "name": "🇧🇪 Belgique",
                    "value": "🇧🇪 Belgique"
                  },
                  {
                    "name": "🇬🇷 Grèce",
                    "value": "🇬🇷 Grèce"
                  },
                  {
                    "name": "🇲🇦 Maroc",
                    "value": "🇲🇦 Maroc"
                  },
                  {
                    "name": "🇵🇱 Pologne",
                    "value": "🇵🇱 Pologne"
                  },
                  {
                    "name": "🇵🇹 Portugal",
                    "value": "🇵🇹 Portugal"
                  },
                  {
                    "name": "🇧🇷 Brésil",
                    "value": "🇧🇷 Brésil"
                  },
                  {
                    "name": "🇰🇪 Kenya",
                    "value": "🇰🇪 Kenya"
                  },
                  {
                    "name": "🇮🇹 Italie",
                    "value": "🇮🇹 Italie"
                  },
                  {
                    "name": "🇮🇱 Israël",
                    "value": "🇮🇱 Israël"
                  },
                  {
                    "name": "🇲🇽 Mexique",
                    "value": "🇲🇽 Mexique"
                  },
                  {
                    "name": "🇺🇦 Ukraine",
                    "value": "🇺🇦 Ukraine"
                  },
                  {
                    "name": "🇫🇷 France",
                    "value": "🇫🇷 France"
                  },
                  {
                    "name": "🇹🇷 Turquie",
                    "value": "🇹🇷 Turquie"
                  },
                  {
                    "name": "🇲🇾 Malaisie",
                    "value": "🇲🇾 Malaisie"
                  },
                  {
                    "name": "🇵🇭 Philippines",
                    "value": "🇵🇭 Philippines"
                  },
                  {
                    "name": "🇿🇦 Afrique du Sud",
                    "value": "🇿🇦 Afrique du Sud"
                  },
                  {
                    "name": "🇩🇪 Allemagne",
                    "value": "🇩🇪 Allemagne"
                  },
                  {
                    "name": "🇳🇱 Pays-Bas",
                    "value": "🇳🇱 Pays-Bas"
                  },
                  {
                    "name": "🇪🇸 Espagne",
                    "value": "🇪🇸 Espagne"
                  },
                  {
                    "name": "🇸🇬 Singapour",
                    "value": "🇸🇬 Singapour"
                  },
                  {
                    "name": "🇦🇺 Australie",
                    "value": "🇦🇺 Australie"
                  },
                  {
                    "name": "🇨🇦 Canada",
                    "value": "🇨🇦 Canada"
                  },
                  {
                    "name": "🇦🇪 Émirats arabes unis",
                    "value": "🇦🇪 Émirats arabes unis"
                  },
                  {
                    "name": "🇵🇰 Pakistan",
                    "value": "🇵🇰 Pakistan"
                  },
                  {
                    "name": "🇬🇧 Royaume-Uni",
                    "value": "🇬🇧 Royaume-Uni"
                  },
                  {
                    "name": "🇮🇳 Inde",
                    "value": "🇮🇳 Inde"
                  },
                  {
                    "name": "🇺🇸 United States",
                    "value": "🇺🇸 United States"
                  }
                ],
                "removed": false,
                "readOnly": false,
                "required": false,
                "displayName": "Country",
                "defaultMatch": false,
                "canBeUsedToMatch": true
              },
              {
                "id": "State",
                "type": "options",
                "display": true,
                "options": [
                  {
                    "name": "Not yet added",
                    "value": "Not yet added"
                  },
                  {
                    "name": "Added to the campaign",
                    "value": "Added to the campaign"
                  },
                  {
                    "name": "No mail found",
                    "value": "No mail found"
                  },
                  {
                    "name": "No employee found",
                    "value": "No employee found"
                  },
                  {
                    "name": "To do later",
                    "value": "To do later"
                  },
                  {
                    "name": "Meeting booked",
                    "value": "Meeting booked"
                  }
                ],
                "removed": true,
                "readOnly": false,
                "required": false,
                "displayName": "State",
                "defaultMatch": false,
                "canBeUsedToMatch": true
              }
            ],
            "mappingMode": "defineBelow",
            "matchingColumns": [],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          },
          "options": {}
        },
        "id": "2d65ccdc-2aa0-4771-bbc9-2d81fb763a9c",
        "name": "Add Company to CRM",
        "type": "n8n-nodes-base.airtable",
        "position": [
          2080,
          760
        ],
        "typeVersion": 2.1
      },
      {
        "parameters": {
          "content": "## LinkedIn Company Search\nThis section initiates the workflow and searches for your target companies on LinkedIn using the Ghost Genius API. \n\nYou can filter and refine your search using keywords, company size, location, industry, or even whether the company has active job postings. Use the \"Set Variables\" node for it.\n\nNote that you can retrieve a maximum of 1000 companies per search (corresponding to 100 LinkedIn pages), so it's important not to exceed this number of results to avoid losing prospects.\n\n**Example:** Let's say I want to target Growth Marketing Agencies with 11-50 employees. I do my search and see that there are 10,000 results. So I refine my search by using location to go country by country and retrieve all 10,000 results in several batches ranging from 500 to 1000 depending on the country.\n\n**Tips:** Pour tester le workflow ou pour voir le nombre résultat de ta recherche change le paramètre de pagination (Max Pages) dans le node \"Search Companies\". Il sera affiché tout en haut dans le JSON de réponse. ",
          "height": 560,
          "width": 800,
          "color": 6
        },
        "id": "c1e2b2b2-84c3-4f70-8052-302fc4296b84",
        "name": "Sticky Note",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          -260,
          400
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "content": "## Company Data Processing \nThis section processes each company individually.\n\nWe retrieve all the company information using Get Company Details by using the LinkedIn link obtained from the previous section.\n\nThen we filter the company based on the number of followers, which gives us a first indication of the company's credibility (200 in this case), and whether their LinkedIn page has a website listed.\n\nThe workflow implements batch processing with a 2-second delay between requests to respect API rate limits. This methodical approach ensures reliable data collection while preventing API timeouts.\n\nYou can adjust these thresholds based on your target market - increasing the follower count for more established businesses or decreasing it for emerging markets.",
          "height": 560,
          "width": 780,
          "color": 4
        },
        "id": "695490e6-3e72-4e7b-9efd-ac726f2862d9",
        "name": "Sticky Note1",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          620,
          400
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "content": "## CRM Integration\nThis section handles the Airtable CRM integration.\n\nIt first checks if the company already exists in your database (using LinkedIn ID) to prevent duplicates because when you do close enough searches, some companies may come up several times.\n\nIf it's a new company, it adds the record to Airtable with comprehensive details including name, LinkedIn URL, website, tagline, description, and category. \n\nThe workflow automatically tags companies as 'Growth Marketing Agency 11-50 🌍' and sets the country to '🇺🇸 United States' (customize according to your use case).",
          "height": 560,
          "width": 780,
          "color": 5
        },
        "id": "ad038572-6dc4-4b52-a906-500706cdf3ff",
        "name": "Sticky Note2",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          1480,
          400
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "content": "## Introduction\nWelcome to my template! Before explaining how to set it up, here's some important information:\n\nThis automation is very easy to implement and is designed for anyone wanting to build and enrich a solid CRM through LinkedIn research.\n\nThe initial data source can be changed as long as you have the LinkedIn URL of the company.\n\nFor any questions, you can send me a DM on my [LinkedIn](https://www.linkedin.com/in/matthieu-belin83/) :)  ",
          "height": 320,
          "width": 600
        },
        "id": "779fa680-0ca4-4bbc-8672-b0ebdf88091a",
        "name": "Sticky Note3",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          0,
          0
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "content": "## Setup\n- Create an account on [Ghost Genius API](ghostgenius.fr) and get your API key.\n\n- Configure the Search Companies and Get Company Info modules by creating a \"Header Auth\" credential:\n**Name: \"Authorization\"**\n**Value: \"Bearer api_key\"**\n\n- Create an Airtable base named \"CRM\" and add at least the following columns: name (default), website (url), LinkedIn (url), id (number).\n\n- Configure your Airtable credential by following the n8n documentation.\n\n- Add your company search selection criteria to the “Set Variables” node.",
          "height": 320,
          "width": 600
        },
        "id": "5ee64f55-077c-4854-850b-d1585217e11e",
        "name": "Sticky Note4",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          700,
          0
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "content": "## Tools \n**(You can use the API and CRM of your choice; this is only a suggestion)**\n\n- API Linkedin : [Ghost Genius API](ghostgenius.fr) \n\n- API Documentation : [Documentation](ghostgenius.fr/docs)\n\n- CRM : [Airtable](airtable.com)\n\n- LinkedIn Location ID Finder : [Ghost Genius Locations ID Finder](ghostgenius.fr/tools/search-sales-navigator-locations-id)",
          "height": 320,
          "width": 600
        },
        "id": "5125b946-56ae-4713-add1-ec551a833b6a",
        "name": "Sticky Note5",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          1400,
          0
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "e81e4891-4786-4dd9-a338-d1095e27f382",
                "name": "Your target",
                "type": "string",
                "value": "Growth Marketing Agency"
              },
              {
                "id": "ed2b6b08-66aa-4d4b-b68c-698b5e841930",
                "name": "B: 1-10 employees, C: 11-50 employees, D: 51-200 employees, E: 201-500 employees, F: 501-1000 employees, G: 1001-5000 employees, H: 5001-10,000 employees, I: 10,001+ employees",
                "type": "string",
                "value": "C"
              },
              {
                "id": "f1d02f1a-8115-4e0c-a5ec-59bf5b54263b",
                "name": "Location (find it on : https://www.ghostgenius.fr/tools/search-sales-navigator-locations-id)",
                "type": "string",
                "value": "103644278"
              }
            ]
          },
          "options": {}
        },
        "id": "afaf9e9e-93fd-487b-837d-27b236db5ed4",
        "name": "Set Variables",
        "type": "n8n-nodes-base.set",
        "position": [
          -20,
          760
        ],
        "typeVersion": 3.4
      },
      {
        "parameters": {
          "url": "https://api.ghostgenius.fr/v2/search/companies",
          "authentication": "genericCredentialType",
          "genericAuthType": "httpHeaderAuth",
          "sendQuery": true,
          "queryParameters": {
            "parameters": [
              {
                "name": "keywords",
                "value": "={{ $json['Your target'] }}"
              },
              {
                "name": "company_size",
                "value": "={{ $json['B: 1-10 employees, C: 11-50 employees, D: 51-200 employees, E: 201-500 employees, F: 501-1000 employees, G: 1001-5000 employees, H: 5001-10,000 employees, I: 10,001+ employees'] }}"
              },
              {
                "name": "location",
                "value": "={{ $json['Location (https://www'].ghostgenius['fr/tools/search-sales-navigator-locations-id)'] }}"
              }
            ]
          },
          "options": {
            "pagination": {
              "pagination": {
                "parameters": {
                  "parameters": [
                    {
                      "name": "page",
                      "value": "={{ $pageCount + 1 }}"
                    }
                  ]
                },
                "paginationCompleteWhen": "other",
                "completeExpression": "={{ $response.body.data.isEmpty() }}",
                "limitPagesFetched": true,
                "maxRequests": 1,
                "requestInterval": 2000
              }
            }
          }
        },
        "id": "c9e5ee3b-762f-4a8f-bf39-eaec1738c41f",
        "name": "Search Companies",
        "type": "n8n-nodes-base.httpRequest",
        "position": [
          180,
          760
        ],
        "typeVersion": 4.2
      },
      {
        "parameters": {
          "fieldToSplitOut": "data",
          "options": {}
        },
        "id": "6b6fce25-fde0-4bab-bcf2-2eaea6328614",
        "name": "Extract Company Data",
        "type": "n8n-nodes-base.splitOut",
        "position": [
          380,
          760
        ],
        "typeVersion": 1,
        "onError": "continueRegularOutput"
      }
    ],
    "connections": {
      "Set Variables": {
        "main": [
          [
            {
              "node": "Search Companies",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Is New Company?": {
        "main": [
          [
            {
              "node": "Add Company to CRM",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Get Company Info": {
        "main": [
          [
            {
              "node": "Filter Valid Companies",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Search Companies": {
        "main": [
          [
            {
              "node": "Extract Company Data",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Add Company to CRM": {
        "main": [
          [
            {
              "node": "Process Each Company",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Extract Company Data": {
        "main": [
          [
            {
              "node": "Process Each Company",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Process Each Company": {
        "main": [
          [],
          [
            {
              "node": "Get Company Info",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Filter Valid Companies": {
        "main": [
          [
            {
              "node": "Check If Company Exists",
              "type": "main",
              "index": 0
            }
          ],
          [
            {
              "node": "Process Each Company",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Check If Company Exists": {
        "main": [
          [
            {
              "node": "Is New Company?",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "When clicking ‘Test workflow’": {
        "main": [
          [
            {
              "node": "Set Variables",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "settings": {
      "executionOrder": "v1"
    },
    "staticData": null,
    "meta": null,
    "pinData": {},
    "versionId": "9d76fac2-dda3-4a23-9859-5ab009639ade",
    "triggerCount": 0,
    "tags": []
  },
  {
    "createdAt": "2025-04-28T18:37:45.659Z",
    "updatedAt": "2025-04-28T18:37:45.659Z",
    "id": "DHQBnpt8qvJmPvec",
    "name": "My workflow 3",
    "active": false,
    "nodes": [
      {
        "parameters": {
          "chatId": "={{ $('Telegram Input').item.json.message.chat.id }}",
          "text": "={{ $json.output }}",
          "additionalFields": {}
        },
        "id": "c244f601-8e0a-49e2-bbd9-dd1c7ac5430b",
        "name": "Telegram Send Message",
        "type": "n8n-nodes-base.telegram",
        "position": [
          2780,
          1600
        ],
        "webhookId": "0eeae020-ed6f-4900-ae38-d646d893171d",
        "typeVersion": 1
      },
      {
        "parameters": {
          "assignments": {
            "assignments": [
              {
                "id": "b5c25cd4-226b-4778-863f-79b13b4a5202",
                "name": "sessionId",
                "type": "string",
                "value": "={{ $json.message.chat.id }}"
              }
            ]
          },
          "includeOtherFields": true,
          "options": {}
        },
        "id": "bbe174a2-1687-42e6-bee8-2e244382b639",
        "name": "Adds SessionId",
        "type": "n8n-nodes-base.set",
        "position": [
          1880,
          1600
        ],
        "typeVersion": 3.4
      },
      {
        "parameters": {
          "promptType": "define",
          "text": "={{ $json.message.text }}",
          "options": {
            "systemMessage": "You are the **CoinMarketCap AI Data Analyst**, a powerful, multi-source crypto intelligence system that integrates three specialized agents:  \n- **CoinMarketCap Crypto Agent**  \n- **CoinMarketCap Exchange & Community Agent**  \n- **CoinMarketCap DEXScan Agent**\n\nYour job is to provide accurate, real-time, and strategic insights into the cryptocurrency landscape across centralized and decentralized platforms.\n\n---\n\n### 🛠️ Tools and Agent Capabilities\n\nYou have access to a suite of **live CoinMarketCap APIs** organized by sub-agents. Each tool is mapped to an endpoint and validated for parameter safety to avoid 400 errors.\n\n---\n\n#### 🔹 1. CoinMarketCap Crypto Agent\n\n**Focus:** Cryptocurrency-level data, listings, quotes, and conversions.\n\n**Tools:**\n- `Crypto Map` – Get coin IDs, names, symbols  \n- `Crypto Info` – Metadata like whitepapers, socials  \n- `Crypto Listings` – Top market cap coins  \n- `Quotes Latest` – Live price, volume, market cap  \n- `Global Metrics` – Total market stats, BTC dominance  \n- `Price Conversion` – Convert one asset to another  \n\n✅ Use for:  \n“Top 10 coins by market cap,” “Convert 5 ETH to USD,” “BTC volume today,” “Whitepaper for SOL”\n\n---\n\n#### 🔹 2. CoinMarketCap Exchange & Community Agent\n\n**Focus:** Exchange intel, community sentiment, and market behavior.\n\n**Tools:**\n- `Exchange Map` – Discover exchanges and get IDs  \n- `Exchange Info` – Metadata like launch date, country, links  \n- `Exchange Assets` – Exchange token holdings & wallets  \n- `CMC 100 Index` – Latest CMC 100 index constituents  \n- `Fear and Greed Index` – Market sentiment tracker  \n\n✅ Use for:  \n“Which tokens does Binance hold?” “Current crypto sentiment” “Top 100 CMC coins”\n\n---\n\n#### 🔹 3. CoinMarketCap DEXScan Agent\n\n**Focus:** Decentralized trading data (spot pairs, pools, liquidity, OHLCV, trades).\n\n**Tools:**\n- `DEX Metadata` – Info for any DEX (logo, date, description)  \n- `DEX Networks List` – All blockchain networks  \n- `DEX Listings Quotes` – DEXs with live trading stats  \n- `DEX Pair Quotes Latest` – Live price/liquidity for spot pairs  \n- `DEX OHLCV Historical` – Historical OHLCV (e.g., 1h, 1d)  \n- `DEX OHLCV Latest` – Real-time OHLCV for current UTC day  \n- `DEX Trades Latest` – Up to 100 recent trades  \n- `DEX Spot Pairs Latest` – All active spot pairs with filters  \n\n✅ Use for:  \n“Price history of USDT/ETH on Uniswap,” “Show DEXs with highest volume,” “Get liquidity of token pair,” “Security scan for PancakeSwap pools”\n\n---\n\n### ⚙️ Multi-Agent Coordination (Advanced Multi-Query Reasoning)\n\nYou are empowered with **advanced multi-query analysis** capabilities:\n- Chain data between agents (e.g., map → quote → historical chart)\n- Use outputs from one tool as inputs for another\n- Automatically fetch required IDs (e.g., exchange ID, contract address) before making a final API call\n- Combine centralized (CEX) and decentralized (DEX) insights into one unified response\n- Filter and compare across timeframes, assets, exchanges, and networks\n\n---\n\n### ⚠️ Validation & Error Prevention Guidelines\n\nTo prevent 400 Bad Request errors:\n- Always include at least **one required field** per endpoint  \n- Use **valid slugs, symbols, or CoinMarketCap IDs**  \n- Don’t use `convert` and `convert_id` together  \n- Use **comma-separated lists** for multi-inputs (if allowed)  \n- Use documented `aux`, `sort`, `interval` fields only  \n- Handle pagination via `scroll_id` or `start/limit` properly  \n\nIf output is too large:\n> ⚠️ “The requested data exceeds the model’s context limit. Please reduce the scope using filters, limits, or sort.”\n\n---\n\n### ✅ Example Tasks You Can Perform\n- “Get liquidity and 24h volume for ETH/USDC on Polygon”\n- “Compare BTC price on Binance vs Uniswap”\n- “Show top 5 DEXs by volume and their top pairs”\n- “Analyze historical price of SHIBA on Ethereum over last 7 days”\n- “Get CoinMarketCap’s sentiment index and top index coins”\n- “List active spot pairs on Arbitrum with volume > $1M and return price, liquidity, and last 24h % change”\n\n---\n\nYou are a **real-time, multi-source AI analyst** purpose-built to extract deep insights from CoinMarketCap’s centralized and decentralized datasets. Use your agents intelligently, validate your queries, and return precise, structured results.\n\nLet’s analyze the crypto world. 🌍📊🧠\n"
          }
        },
        "id": "e9bfbe00-759c-4e20-97b3-e4c599498bed",
        "name": "CoinMarketCap AI Data Analyst Agent",
        "type": "@n8n/n8n-nodes-langchain.agent",
        "position": [
          2260,
          1600
        ],
        "typeVersion": 1.7,
        "notes": "{{ $json.sessionId }}"
      },
      {
        "parameters": {
          "model": {
            "__rl": true,
            "mode": "list",
            "value": "gpt-4o-mini"
          },
          "options": {}
        },
        "id": "1aa21e36-4dfd-4595-8c1d-632995a3e2be",
        "name": "CoinMarketCap Agent Brain",
        "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
        "position": [
          2020,
          1880
        ],
        "typeVersion": 1.2
      },
      {
        "parameters": {},
        "id": "3782160c-ed0d-4e65-a71d-95491ea40e50",
        "name": "CoinMarketCap Memory",
        "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
        "position": [
          2180,
          1880
        ],
        "typeVersion": 1.3
      },
      {
        "parameters": {
          "name": "CoinMarketCap_Crypto_Agent_Tool",
          "workflowId": {
            "__rl": true,
            "mode": "list",
            "value": "R4EuB1gx1IpMXCJM",
            "cachedResultName": "JayaFamily Assistant — CoinMarketCap_Crypto_Agent_Tool"
          },
          "workflowInputs": {
            "value": {
              "message": "={{ $fromAI(\"message\",\"Populate this with a relevant message to this subagent\")}}",
              "sessionId": "={{ $json.sessionId }}"
            },
            "schema": [
              {
                "id": "message",
                "type": "string",
                "display": true,
                "removed": false,
                "required": false,
                "displayName": "message",
                "defaultMatch": false,
                "canBeUsedToMatch": true
              },
              {
                "id": "sessionId",
                "type": "string",
                "display": true,
                "removed": false,
                "required": false,
                "displayName": "sessionId",
                "defaultMatch": false,
                "canBeUsedToMatch": true
              }
            ],
            "mappingMode": "defineBelow",
            "matchingColumns": [],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          }
        },
        "id": "bed5a2c4-b7da-40dc-a5f7-3b940cc06c58",
        "name": "CoinMarketCap Crypto Agent Tool",
        "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
        "position": [
          2340,
          1880
        ],
        "typeVersion": 2.1
      },
      {
        "parameters": {
          "name": "CoinMarketCap_Exchange_and_Community_Agent_Tool",
          "workflowId": {
            "__rl": true,
            "mode": "list",
            "value": "kbJb4VMD3SZlcS2u",
            "cachedResultName": "JayaFamily Assistant — CoinMarketCap_Exchange_and_Community_Agent_Tool"
          },
          "workflowInputs": {
            "value": {
              "message": "={{ $fromAI(\"message\",\"Populate this with a relevant message to this subagent\")}}",
              "sessionId": "={{ $json.sessionId }}"
            },
            "schema": [
              {
                "id": "sessionId",
                "type": "string",
                "display": true,
                "removed": false,
                "required": false,
                "displayName": "sessionId",
                "defaultMatch": false,
                "canBeUsedToMatch": true
              },
              {
                "id": "message",
                "type": "string",
                "display": true,
                "removed": false,
                "required": false,
                "displayName": "message",
                "defaultMatch": false,
                "canBeUsedToMatch": true
              }
            ],
            "mappingMode": "defineBelow",
            "matchingColumns": [],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          }
        },
        "id": "187c927b-3930-4f05-a727-ff8bda8c00b9",
        "name": "CoinMarketCap Exchange and Community Agent Tool",
        "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
        "position": [
          2500,
          1880
        ],
        "typeVersion": 2.1
      },
      {
        "parameters": {
          "name": "CoinMarketCap_DEXScan_Agent_Tool",
          "workflowId": {
            "__rl": true,
            "mode": "list",
            "value": "ImiznkEUWCkKbg1w",
            "cachedResultName": "JayaFamily Assistant — CoinMarketCap_DEXScan_Agent_Tool"
          },
          "workflowInputs": {
            "value": {
              "message": "={{ $fromAI(\"message\",\"Populate this with a relevant message to this subagent\")}}",
              "sessionId": "={{ $json.sessionId }}"
            },
            "schema": [
              {
                "id": "sessionId",
                "type": "string",
                "display": true,
                "removed": false,
                "required": false,
                "displayName": "sessionId",
                "defaultMatch": false,
                "canBeUsedToMatch": true
              },
              {
                "id": "message",
                "type": "string",
                "display": true,
                "removed": false,
                "required": false,
                "displayName": "message",
                "defaultMatch": false,
                "canBeUsedToMatch": true
              }
            ],
            "mappingMode": "defineBelow",
            "matchingColumns": [],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          }
        },
        "id": "7b166a98-0888-49fc-9454-64ddfe118e1c",
        "name": "CoinMarketCap DEXScan Agent Tool",
        "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
        "position": [
          2680,
          1880
        ],
        "typeVersion": 2.1
      },
      {
        "parameters": {
          "updates": [
            "message"
          ],
          "additionalFields": {}
        },
        "id": "66751c05-3f3a-426e-b007-2d0210c27d10",
        "name": "Telegram Input",
        "type": "n8n-nodes-base.telegramTrigger",
        "position": [
          1380,
          1600
        ],
        "webhookId": "b33d2025-01c2-4386-b677-206a87a1856b",
        "typeVersion": 1.1
      },
      {
        "parameters": {
          "content": "# 📊 CoinMarketCap AI Analyst Agent (n8n Workflow)\n\n## 🧠 Multi-Agent System Overview\nThis is the **primary supervisor agent** for the **CoinMarketCap AI Analyst Workflow**, designed using **modular AI agent architecture** in **n8n**.\n\n⚠️ **This workflow requires 3 external tool workflows to function properly.** You must download, install, and connect the following:\n\n### 🔌 Required Sub-Agent Tools:\n1. **CoinMarketCap_Crypto_Agent_Tool** – Handles cryptocurrency quotes, listings, conversions\n2. **CoinMarketCap_Exchange_and_Community_Agent_Tool** – Handles exchanges, trending tokens, Fear & Greed Index\n3. **CoinMarketCap_DEXScan_Agent_Tool** – Handles decentralized liquidity, pair quotes, OHLCV analysis\n\nOnce installed, these agents enable advanced capabilities:\n\n### ✅ Key AI Functions:\n- Analyze market caps, volumes, supply metrics across coins\n- Track new listings and top gainers/losers\n- Evaluate trading pairs and liquidity in CEX and DEX markets\n- Retrieve sentiment indicators and trending discussions\n\n---\n\n## 🧠 Node Structure Summary\n\n### **1️⃣ Analyst Brain**\n- **Model**: GPT-4o Mini\n- **Function**: Understands user queries, delegates tasks to agents\n\n### **2️⃣ Memory Buffer**\n- Stores session state and context between prompts\n\n### **3️⃣ Tool Triggers**\n- **toolWorkflow()** function calls: \n   - `CoinMarketCap_Crypto_Agent_Tool`\n   - `CoinMarketCap_Exchange_and_Community_Agent_Tool`\n   - `CoinMarketCap_DEXScan_Agent_Tool`\n\n---\n\n## ⚠️ Notes:\n- 📎 Make sure API credentials are installed and valid for each agent\n- 📍 Each tool runs independently but feeds results to the supervisor for synthesis\n- 🧩 Use `message` and `sessionId` parameters consistently in every sub-agent call\n\n# 📊 CoinMarketCap AI Analyst Agent Tools (n8n Workflow) Guide\n\n## 🚀 Workflow Overview\nThe **CoinMarketCap AI Analyst Agent** is a modular AI-powered system built on **n8n** to deliver **real-time crypto market insights**. It connects directly to CoinMarketCap APIs across three specialized agents:\n\n- **Cryptocurrency Agent** – Market listings, quotes, conversions, and token info.\n- **Exchange & Community Agent** – Trending topics, exchange performance, and sentiment.\n- **DEXScan Agent** – Liquidity, trading volume, and OHLC data on decentralized markets.\n\n### 🎯 **Key Capabilities**:\n- Fetch latest token listings and rank movements\n- Track real-time price quotes and convert values between currencies\n- Compare metrics like market cap, volume, and dominance\n- Monitor exchange market pairs and volume\n- Analyze community sentiment and Fear & Greed Index\n- Visualize DEX liquidity and historical trading trends\n\n---\n\n## 🔗 Node Architecture Summary\n\n### **1️⃣ AI Analyst Brain**\n- **Type**: GPT-4o Mini\n- **Function**: Interprets prompts and queries, routes requests to proper sub-agent.\n\n### **2️⃣ Session Memory**\n- **Type**: Memory Buffer\n- **Function**: Maintains query context during conversation.\n\n### **3️⃣ Tool Agents**\n- **Type**: Tool Workflow\n- Cryptocurrency / Exchange / DEXScan agent endpoints trigger APIs with mapped params.\n\n",
          "height": 1960,
          "width": 1180
        },
        "id": "cb38ff38-ab13-44d3-92bc-d02177ddec79",
        "name": "CMC Multi-Agent Guide",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          0,
          0
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "content": "## ⚠️ Error Handling Guide\n\n| **Error Code** | **Meaning** |\n|---------------|------------|\n| `200` | Success |\n| `400` | Bad Request (invalid query/params) |\n| `401` | Unauthorized (missing or invalid API key) |\n| `429` | Rate Limit Exceeded |\n| `500` | CoinMarketCap server error |\n\n### 🔍 Common Fixes\n- Ensure `symbol`, `slug`, or `id` match valid CoinMarketCap entries\n- Use correct `timestamp`, `network`, and pagination parameters\n- Rate-limit high-frequency queries to avoid 429 errors\n\n---\n\n## 🚀 Need Help?\nFor custom CoinMarketCap agent support, dashboards, or token data automation, connect:\n\n🌐 **Don Jayamaha — LinkedIn**  \n🔗 [http://linkedin.com/in/donjayamahajr](http://linkedin.com/in/donjayamahajr)\n\n© 2025 Treasurium Capital Limited Company. All rights reserved.\nThis AI workflow architecture, including logic, design, and prompt structures, is the intellectual property of Treasurium Capital Limited Company. Unauthorized reproduction, redistribution, or resale is prohibited under U.S. copyright law. Licensed use only.\n",
          "height": 600,
          "width": 680,
          "color": 3
        },
        "id": "ca541b9c-219e-4ca4-9865-9e169496b461",
        "name": "CMC Sticky Note2",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          2860,
          0
        ],
        "typeVersion": 1
      },
      {
        "parameters": {
          "content": "## 📌 How to Use the Workflow\n\n### ✅ Step 1: Provide Inputs\n- Use token `symbol`, `slug`, or `ID`\n- Set timestamps (`before`, `after`) in **Unix format** for historical data\n- Use `chain`, `limit`, and `start` for pagination when needed\n\n### ✅ Step 2: Execute API Tools\n- The AI routes queries to sub-agents: **Cryptocurrency**, **Exchange**, or **DEXScan**\n\n### ✅ Step 3: Get Response & Output\n- Results can be output to Telegram, dashboards, or n8n HTTP Response nodes\n\n---\n\n## 🗣️ Example Questions to Ask the CMC AI Analyst\n\n### 💬 Market Intelligence\n- \"What are the top 5 tokens by trading volume right now?\"\n- \"Which coins gained the most in the last 24 hours?\"\n- \"What’s the total crypto market cap today?\"\n\n### 💬 Token Insights\n- \"What’s the price of SOL in USD?\"\n- \"How much is 1000 USDT in BTC?\"\n- \"Show me the description and whitepaper link for Dogecoin.\"\n\n### 💬 Exchange & Sentiment\n- \"What’s the Fear & Greed index today?\"\n- \"List exchanges with the highest asset holdings.\"\n- \"Give me info about Binance – when was it launched?\"\n\n### 💬 DEX Data\n- \"Show me the top DEX spot pairs on Ethereum.\"\n- \"What’s the OHLCV data for SOL-USDT on Solana over the last 7 days?\"\n- \"What trades just occurred on PancakeSwap?\"\n\n---\n\n## ⚠️ Example API Queries\n\n### 1️⃣ Get Top 5 Tokens by Volume\n```plaintext\nGET /v1/cryptocurrency/listings/latest?sort=volume_24h&limit=5\n```\n\n### 2️⃣ Convert 1000 USDT to BTC\n```plaintext\nGET /v1/tools/price-conversion?amount=1000&symbol=USDT&convert=BTC\n```\n\n### 3️⃣ Check Fear & Greed Index\n```plaintext\nGET /v3/fear-and-greed/latest\n```\n\n### 4️⃣ Get OHLCV of DEX Pair\n```plaintext\nGET /v4/dex/pairs/ohlcv/historical?network=solana&pair=SOL-USDT&interval=1d\n```\n\n---",
          "height": 1500,
          "width": 900,
          "color": 5
        },
        "id": "2236faea-8ea5-4242-b53f-5b0cc3db4a4b",
        "name": "CMC Sticky Note",
        "type": "n8n-nodes-base.stickyNote",
        "position": [
          1600,
          0
        ],
        "typeVersion": 1
      }
    ],
    "connections": {
      "Adds SessionId": {
        "main": [
          [
            {
              "node": "CoinMarketCap AI Data Analyst Agent",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Telegram Input": {
        "main": [
          [
            {
              "node": "Adds SessionId",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "CoinMarketCap Memory": {
        "ai_memory": [
          [
            {
              "node": "CoinMarketCap AI Data Analyst Agent",
              "type": "ai_memory",
              "index": 0
            }
          ]
        ]
      },
      "CoinMarketCap Agent Brain": {
        "ai_languageModel": [
          [
            {
              "node": "CoinMarketCap AI Data Analyst Agent",
              "type": "ai_languageModel",
              "index": 0
            }
          ]
        ]
      },
      "CoinMarketCap Crypto Agent Tool": {
        "ai_tool": [
          [
            {
              "node": "CoinMarketCap AI Data Analyst Agent",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      },
      "CoinMarketCap DEXScan Agent Tool": {
        "ai_tool": [
          [
            {
              "node": "CoinMarketCap AI Data Analyst Agent",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      },
      "CoinMarketCap AI Data Analyst Agent": {
        "main": [
          [
            {
              "node": "Telegram Send Message",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "CoinMarketCap Exchange and Community Agent Tool": {
        "ai_tool": [
          [
            {
              "node": "CoinMarketCap AI Data Analyst Agent",
              "type": "ai_tool",
              "index": 0
            }
          ]
        ]
      }
    },
    "settings": {
      "executionOrder": "v1"
    },
    "staticData": null,
    "meta": null,
    "pinData": {},
    "versionId": "76189000-64fb-47bd-8fd2-88f1abf47fdb",
    "triggerCount": 0,
    "tags": []
  },
  {
    "createdAt": "2025-05-06T20:37:26.114Z",
    "updatedAt": "2025-05-06T21:12:48.000Z",
    "id": "Hk3kMmWJcOpvy7T9",
    "name": "Map new leads to airtable from g-sheets source of truth",
    "active": false,
    "nodes": [
      {
        "parameters": {},
        "type": "n8n-nodes-base.manualTrigger",
        "typeVersion": 1,
        "position": [
          -20,
          0
        ],
        "id": "92255134-4188-4669-906e-9502de7b9ab8",
        "name": "When clicking ‘Test workflow’"
      },
      {
        "parameters": {
          "authentication": "serviceAccount",
          "documentId": {
            "__rl": true,
            "value": "1mzd-2R0-Wnnwq-xatzOiBnPW9vzHmm5LVmASGoiHTLc",
            "mode": "list",
            "cachedResultName": "Leads",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1mzd-2R0-Wnnwq-xatzOiBnPW9vzHmm5LVmASGoiHTLc/edit?usp=drivesdk"
          },
          "sheetName": {
            "__rl": true,
            "value": "gid=0",
            "mode": "list",
            "cachedResultName": "Test Leads",
            "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1mzd-2R0-Wnnwq-xatzOiBnPW9vzHmm5LVmASGoiHTLc/edit#gid=0"
          },
          "options": {}
        },
        "type": "n8n-nodes-base.googleSheets",
        "typeVersion": 4.5,
        "position": [
          140,
          0
        ],
        "id": "8f0e2a35-f624-410c-8370-54729cd7f4f9",
        "name": "Google Sheets",
        "credentials": {
          "googleApi": {
            "id": "vhxvdxuaD8uT3I0a",
            "name": "Google Sheets account"
          }
        }
      },
      {
        "parameters": {
          "operation": "create",
          "base": {
            "__rl": true,
            "value": "app6SUQ9NUFSGtmi0",
            "mode": "list",
            "cachedResultName": "Altiverr Leads",
            "cachedResultUrl": "https://airtable.com/app6SUQ9NUFSGtmi0"
          },
          "table": {
            "__rl": true,
            "value": "tbl8ZXe5BVSv91sGu",
            "mode": "list",
            "cachedResultName": "Leads",
            "cachedResultUrl": "https://airtable.com/app6SUQ9NUFSGtmi0/tbl8ZXe5BVSv91sGu"
          },
          "columns": {
            "mappingMode": "defineBelow",
            "value": {
              "Industry": "=",
              "Company": "={{ $json[\"Company Name\"] }}",
              "Email": "={{ $json[\"Work Email\"] }}",
              "Last Name": "={{ $json[\"Last Name\"] }}",
              "First Name": "={{ $json[\"First Name\"] }}",
              "Source": "Clay",
              "domain": "={{ $json[\"Company Domain\"] }}",
              "linkedin": "={{ $json[\"Linkedin Profile\"] }}",
              "Select": "New",
              "Job Title": "={{ $json[\"Job Title\"] }}",
              "City": "={{ $json.City }}",
              "State": "={{ $json.State }}",
              "Lead Name": "={{ $json[\"Full Name\"] }}"
            },
            "matchingColumns": [],
            "schema": [
              {
                "id": "Lead Name",
                "displayName": "Lead Name",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Company",
                "displayName": "Company",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Industry",
                "displayName": "Industry",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "MRR",
                "displayName": "MRR",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Tech Stack",
                "displayName": "Tech Stack",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Team Size",
                "displayName": "Team Size",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Decision Maker",
                "displayName": "Decision Maker",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Agree to Show",
                "displayName": "Agree to Show",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Created At",
                "displayName": "Created At",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Reschedule URL",
                "displayName": "Reschedule URL",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Location",
                "displayName": "Location",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Start Time",
                "displayName": "Start Time",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Source",
                "displayName": "Source",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "First Name",
                "displayName": "First Name",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Last Name",
                "displayName": "Last Name",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Email",
                "displayName": "Email",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "domain",
                "displayName": "domain",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "linkedin",
                "displayName": "linkedin",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Job Title",
                "displayName": "Job Title",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "Select",
                "displayName": "Select",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "options",
                "options": [
                  {
                    "name": "New",
                    "value": "New"
                  },
                  {
                    "name": "Contacted",
                    "value": "Contacted"
                  }
                ],
                "readOnly": false,
                "removed": false
              },
              {
                "id": "City",
                "displayName": "City",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              },
              {
                "id": "State",
                "displayName": "State",
                "required": false,
                "defaultMatch": false,
                "canBeUsedToMatch": true,
                "display": true,
                "type": "string",
                "readOnly": false,
                "removed": false
              }
            ],
            "attemptToConvertTypes": false,
            "convertFieldsToString": false
          },
          "options": {}
        },
        "type": "n8n-nodes-base.airtable",
        "typeVersion": 2.1,
        "position": [
          280,
          0
        ],
        "id": "3b354bf0-f24c-4fa4-b8e8-579c43201e54",
        "name": "Airtable",
        "credentials": {
          "airtableTokenApi": {
            "id": "j7w1vKTB0TLogKo3",
            "name": "Airtable Personal Access Token"
          }
        }
      }
    ],
    "connections": {
      "When clicking ‘Test workflow’": {
        "main": [
          [
            {
              "node": "Google Sheets",
              "type": "main",
              "index": 0
            }
          ]
        ]
      },
      "Google Sheets": {
        "main": [
          [
            {
              "node": "Airtable",
              "type": "main",
              "index": 0
            }
          ]
        ]
      }
    },
    "settings": {
      "executionOrder": "v1"
    },
    "staticData": null,
    "meta": {
      "templateCredsSetupCompleted": true
    },
    "pinData": {},
    "versionId": "9bfebda4-8bd9-4625-a3fe-3a9127cd8f1f",
    "triggerCount": 0,
    "tags": []
  },
  {
    "createdAt": "2025-05-06T23:13:30.409Z",
    "updatedAt": "2025-05-06T23:54:28.000Z",
    "id": "MCTaPefcOSqpZqmH",
    "name": "Warm inbound Calendly qualifying call",
    "active": false,
    "nodes": [
      {
        "parameters": {
          "trigger": [
            "message"
          ],
          "channelId": {
            "__rl": true,
            "mode": "list",
            "value": ""
          },
          "options": {}
        },
        "type": "n8n-nodes-base.slackTrigger",
        "typeVersion": 1,
        "position": [
          0,
          0
        ],
        "id": "eedd2909-d0a4-4072-92fa-28204d347f93",
        "name": "Slack Trigger",
        "webhookId": "f939a053-cc02-4c1e-9334-b83686933ff1",
        "credentials": {
          "slackApi": {
            "id": "6GivNGp5N2Az5SNc",
            "name": "Slack"
          }
        }
      }
    ],
    "connections": {},
    "settings": {
      "executionOrder": "v1"
    },
    "staticData": null,
    "meta": {
      "templateCredsSetupCompleted": true
    },
    "pinData": {},
    "versionId": "c0daf761-cc67-4b07-b7c1-f7c2e6844db4",
    "triggerCount": 0,
    "tags": []
  }
]